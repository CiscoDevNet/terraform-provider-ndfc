// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package datasource_rest_api

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
)

func RestApiDataSourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Attributes: map[string]schema.Attribute{
			"query_parameters": schema.StringAttribute{
				Optional:            true,
				Description:         "Query parameters for GET API if any; format is key1=value1&key2=value2",
				MarkdownDescription: "Query parameters for GET API if any; format is key1=value1&key2=value2",
			},
			"response_message": schema.StringAttribute{
				Computed:            true,
				Description:         "Response message from the API for the GET operation\n",
				MarkdownDescription: "Response message from the API for the GET operation\n",
			},
			"url": schema.StringAttribute{
				Required:            true,
				Description:         "URL to be used for GET - Note: This is prefixed with base_url",
				MarkdownDescription: "URL to be used for GET - Note: This is prefixed with base_url",
			},
		},
		Description:         "Datasource to retrieve data from any REST API on NDFC.  \nNote: `url` fields are pre-fixed with the NDFC base URL which also includes `<base_url>/appcenter/cisco/ndfc/api/v1/`.       \nHence always use urls relative to above base URL.        \n-  `url` - specify the API and `method` to specify the HTTP method to be used for CRUD operations.  \n-  `query_parameters` - specify the query parameters for the GET operation if any\n-  `response_message` - The response message from the API for the GET operation\n",
		MarkdownDescription: "Datasource to retrieve data from any REST API on NDFC.  \nNote: `url` fields are pre-fixed with the NDFC base URL which also includes `<base_url>/appcenter/cisco/ndfc/api/v1/`.       \nHence always use urls relative to above base URL.        \n-  `url` - specify the API and `method` to specify the HTTP method to be used for CRUD operations.  \n-  `query_parameters` - specify the query parameters for the GET operation if any\n-  `response_message` - The response message from the API for the GET operation\n",
	}
}

type RestApiModel struct {
	QueryParameters types.String `tfsdk:"query_parameters"`
	ResponseMessage types.String `tfsdk:"response_message"`
	Url             types.String `tfsdk:"url"`
}
