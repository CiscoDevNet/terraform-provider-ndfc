// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package provider_ndfc

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/hashicorp/terraform-plugin-framework/provider/schema"
)

func NdfcProviderSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Attributes: map[string]schema.Attribute{
			"domain": schema.StringAttribute{
				Optional:            true,
				Description:         "NDFC Login credentials - domain",
				MarkdownDescription: "NDFC Login credentials - domain",
			},
			"host": schema.StringAttribute{
				Required:            true,
				Description:         "NDFC Login credentials - host",
				MarkdownDescription: "NDFC Login credentials - host",
			},
			"insecure": schema.BoolAttribute{
				Required:            true,
				Description:         "NDFC Login  - ignore certificate issues",
				MarkdownDescription: "NDFC Login  - ignore certificate issues",
			},
			"password": schema.StringAttribute{
				Required:            true,
				Sensitive:           true,
				Description:         "NDFC Login credentials - password",
				MarkdownDescription: "NDFC Login credentials - password",
			},
			"timeout": schema.Int64Attribute{
				Optional:            true,
				Description:         "NDFC HTTP request timeout - timeout",
				MarkdownDescription: "NDFC HTTP request timeout - timeout",
			},
			"username": schema.StringAttribute{
				Required:            true,
				Description:         "NDFC Login credentials - user",
				MarkdownDescription: "NDFC Login credentials - user",
			},
		},
	}
}

type NdfcModel struct {
	Domain   types.String `tfsdk:"domain"`
	Host     types.String `tfsdk:"host"`
	Insecure types.Bool   `tfsdk:"insecure"`
	Password types.String `tfsdk:"password"`
	Timeout  types.Int64  `tfsdk:"timeout"`
	Username types.String `tfsdk:"username"`
}
