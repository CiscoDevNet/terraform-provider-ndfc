// Code generated;  DO NOT EDIT.

package provider

import (
	"strconv"
	"terraform-provider-ndfc/internal/provider/resources/resource_policy"

	"github.com/hashicorp/terraform-plugin-framework/path"
	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func PolicyModelHelperStateCheck(RscName string, c resource_policy.NDFCPolicyModel, attrPath path.Path) []resource.TestCheckFunc {
	ret := []resource.TestCheckFunc{}

	if c.Id != nil {
		ret = append(ret, resource.TestCheckResourceAttr(RscName, attrPath.AtName("id").String(), strconv.Itoa(int(*c.Id))))
	}
	if c.PolicyId != "" {
		ret = append(ret, resource.TestCheckResourceAttr(RscName, attrPath.AtName("policy_id").String(), c.PolicyId))
	}
	if c.FabricName != "" {
		ret = append(ret, resource.TestCheckResourceAttr(RscName, attrPath.AtName("fabric_name").String(), c.FabricName))
	}
	if c.IsPolicyGroup {
		ret = append(ret, resource.TestCheckResourceAttr(RscName, attrPath.AtName("is_policy_group").String(), "true"))
	} else {
		ret = append(ret, resource.TestCheckResourceAttr(RscName, attrPath.AtName("is_policy_group").String(), "false"))
	}
	if c.Deploy {
		ret = append(ret, resource.TestCheckResourceAttr(RscName, attrPath.AtName("deploy").String(), "true"))
	} else {
		ret = append(ret, resource.TestCheckResourceAttr(RscName, attrPath.AtName("deploy").String(), "false"))
	}
	if c.Status != "" {
		ret = append(ret, resource.TestCheckResourceAttr(RscName, attrPath.AtName("status").String(), c.Status))
	}
	if c.EntityName != "" {
		ret = append(ret, resource.TestCheckResourceAttr(RscName, attrPath.AtName("entity_name").String(), c.EntityName))
	}
	if c.EntityType != "" {
		ret = append(ret, resource.TestCheckResourceAttr(RscName, attrPath.AtName("entity_type").String(), c.EntityType))
	}
	if c.Description != "" {
		ret = append(ret, resource.TestCheckResourceAttr(RscName, attrPath.AtName("description").String(), c.Description))
	}
	if c.TemplateName != "" {
		ret = append(ret, resource.TestCheckResourceAttr(RscName, attrPath.AtName("template_name").String(), c.TemplateName))
	}
	if c.Source != "" {
		ret = append(ret, resource.TestCheckResourceAttr(RscName, attrPath.AtName("source").String(), c.Source))
	}
	if c.Priority != nil {
		ret = append(ret, resource.TestCheckResourceAttr(RscName, attrPath.AtName("priority").String(), strconv.Itoa(int(*c.Priority))))
	} else {
		ret = append(ret, resource.TestCheckResourceAttr(RscName, attrPath.AtName("priority").String(), "500"))
	}
	if c.DeviceSerialNumber != "" {
		ret = append(ret, resource.TestCheckResourceAttr(RscName, attrPath.AtName("device_serial_number").String(), c.DeviceSerialNumber))
	}
	if c.AutoGenerated != nil {
		ret = append(ret, resource.TestCheckResourceAttr(RscName, attrPath.AtName("auto_generated").String(), strconv.FormatBool(*c.AutoGenerated)))
	}
	if c.Deleted != nil {
		ret = append(ret, resource.TestCheckResourceAttr(RscName, attrPath.AtName("deleted").String(), strconv.FormatBool(*c.Deleted)))
	}
	return ret
}
