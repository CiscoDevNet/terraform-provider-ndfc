// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package resource_fabric_msite_ext_net

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
)

func FabricMsiteExtNetResourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Attributes: map[string]schema.Attribute{
			"aaa_remote_ip_enabled": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Enable only, when IP Authorization is enabled in the AAA Server",
				MarkdownDescription: "Enable only, when IP Authorization is enabled in the AAA Server",
			},
			"aaa_server_conf": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "AAA Configurations",
				MarkdownDescription: "AAA Configurations",
			},
			"allow_nxc": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Allow onboarding of this fabric to Nexus Cloud",
				MarkdownDescription: "Allow onboarding of this fabric to Nexus Cloud",
			},
			"allow_nxc_prev": schema.BoolAttribute{
				Computed:            true,
				Description:         "Previous state of Allow onboarding of this fabric to Nexus Cloud",
				MarkdownDescription: "Previous state of Allow onboarding of this fabric to Nexus Cloud",
			},
			"bgp_as": schema.StringAttribute{
				Required:            true,
				Description:         "1-4294967295 | 1-65535.0-65535. It is a good practice to have a unique ASN for each Fabric.",
				MarkdownDescription: "1-4294967295 | 1-65535.0-65535. It is a good practice to have a unique ASN for each Fabric.",
			},
			"bootstrap_conf": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Additional CLIs required during device bootup/login e.g. AAA/Radius",
				MarkdownDescription: "Additional CLIs required during device bootup/login e.g. AAA/Radius",
			},
			"bootstrap_conf_xe": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Additional CLIs required during device bootup/login e.g. AAA/Radius",
				MarkdownDescription: "Additional CLIs required during device bootup/login e.g. AAA/Radius",
			},
			"bootstrap_enable": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Automatic IP Assignment For POAP (For NX-OS and IOS XE (Cat9K) Switches Only)",
				MarkdownDescription: "Automatic IP Assignment For POAP (For NX-OS and IOS XE (Cat9K) Switches Only)",
			},
			"bootstrap_multisubnet": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "\"DHCPv4 Multi Subnet Scope - lines with # prefix are ignored here\"",
				MarkdownDescription: "\"DHCPv4 Multi Subnet Scope - lines with # prefix are ignored here\"",
			},
			"bootstrap_multisubnet_internal": schema.StringAttribute{
				Computed:            true,
				Description:         "Internal Bootstrap Multi Subnet Scope",
				MarkdownDescription: "Internal Bootstrap Multi Subnet Scope",
			},
			"cdp_enable": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Enable CDP on management interface",
				MarkdownDescription: "Enable CDP on management interface",
			},
			"dci_subnet_range": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Address range to assign P2P DCI Links",
				MarkdownDescription: "Address range to assign P2P DCI Links",
			},
			"dci_subnet_target_mask": schema.Int64Attribute{
				Optional:            true,
				Computed:            true,
				Description:         "Target Mask for Subnet Range (Min:8, Max:31)",
				MarkdownDescription: "Target Mask for Subnet Range (Min:8, Max:31)",
			},
			"deploy": schema.BoolAttribute{
				Required:            true,
				Description:         "This flag does configuration save and deploy",
				MarkdownDescription: "This flag does configuration save and deploy",
			},
			"deployment_freeze": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Disable all deployments in this fabric",
				MarkdownDescription: "Disable all deployments in this fabric",
			},
			"deployment_status": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "This fields shows the actual status of the deployment. It can be one of the following: Deployment pending Deployment successful",
				MarkdownDescription: "This fields shows the actual status of the deployment. It can be one of the following: Deployment pending Deployment successful",
			},
			"dhcp_enable": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Automatic IP Assignment For POAP From Local DHCP Server",
				MarkdownDescription: "Automatic IP Assignment For POAP From Local DHCP Server",
			},
			"dhcp_end": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "End Address For Switch POAP",
				MarkdownDescription: "End Address For Switch POAP",
			},
			"dhcp_end_internal": schema.StringAttribute{
				Computed:            true,
				Description:         "Internal DHCP End Address",
				MarkdownDescription: "Internal DHCP End Address",
			},
			"dhcp_ipv6_enable": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "DHCP Version",
				MarkdownDescription: "DHCP Version",
				Validators: []validator.String{
					stringvalidator.OneOf("DHCPv4", "DHCPv6"),
				},
			},
			"dhcp_ipv6_enable_internal": schema.StringAttribute{
				Computed:            true,
				Description:         "Internal DHCP IPv6 Enable",
				MarkdownDescription: "Internal DHCP IPv6 Enable",
			},
			"dhcp_start": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Start Address For Switch POAP",
				MarkdownDescription: "Start Address For Switch POAP",
			},
			"dhcp_start_internal": schema.StringAttribute{
				Computed:            true,
				Description:         "Internal DHCP Start Address",
				MarkdownDescription: "Internal DHCP Start Address",
			},
			"domain_name": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Domain name for DHCP server PnP block",
				MarkdownDescription: "Domain name for DHCP server PnP block",
			},
			"domain_name_internal": schema.StringAttribute{
				Computed:            true,
				Description:         "Internal Domain Name",
				MarkdownDescription: "Internal Domain Name",
			},
			"enable_aaa": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Include AAA configs from Advanced tab during device bootup",
				MarkdownDescription: "Include AAA configs from Advanced tab during device bootup",
			},
			"enable_netflow": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Enable Netflow on VTEPs",
				MarkdownDescription: "Enable Netflow on VTEPs",
			},
			"enable_netflow_prev": schema.BoolAttribute{
				Computed:            true,
				Description:         "Previous state of Enable Netflow on VTEPs",
				MarkdownDescription: "Previous state of Enable Netflow on VTEPs",
			},
			"enable_nxapi": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Enable HTTPS NX-API",
				MarkdownDescription: "Enable HTTPS NX-API",
			},
			"enable_nxapi_http": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Enable HTTP NX-API",
				MarkdownDescription: "Enable HTTP NX-API",
			},
			"enable_real_time_backup": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Backup hourly only if there is any config deployment since last backup",
				MarkdownDescription: "Backup hourly only if there is any config deployment since last backup",
			},
			"enable_rt_intf_stats": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Valid for NX-OS only",
				MarkdownDescription: "Valid for NX-OS only",
			},
			"enable_scheduled_backup": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Backup at the specified time",
				MarkdownDescription: "Backup at the specified time",
			},
			"ext_fabric_type": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "External Fabric Type",
				MarkdownDescription: "External Fabric Type",
			},
			"fabric_freeform": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Additional supported CLIs for all same OS (e.g. all NxOS or IOS-XE, etc) switches",
				MarkdownDescription: "Additional supported CLIs for all same OS (e.g. all NxOS or IOS-XE, etc) switches",
			},
			"fabric_name": schema.StringAttribute{
				Required:            true,
				Description:         "Fabric name to be created, updated or deleted.",
				MarkdownDescription: "Fabric name to be created, updated or deleted.",
				PlanModifiers: []planmodifier.String{
					stringplanmodifier.RequiresReplace(),
				},
			},
			"fabric_type": schema.StringAttribute{
				Computed:            true,
				Description:         "Fabric Type",
				MarkdownDescription: "Fabric Type",
			},
			"feature_ptp": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Enable Precision Time Protocol (PTP)",
				MarkdownDescription: "Enable Precision Time Protocol (PTP)",
			},
			"feature_ptp_internal": schema.BoolAttribute{
				Computed:            true,
				Description:         "Internal Feature PTP",
				MarkdownDescription: "Internal Feature PTP",
			},
			"ff": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Template Family",
				MarkdownDescription: "Template Family",
			},
			"id": schema.StringAttribute{
				Computed:            true,
				Description:         "Terraform unique Id for the fabric resource",
				MarkdownDescription: "Terraform unique Id for the fabric resource",
			},
			"inband_enable": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Enable POAP over Inband Interface (Pre-req: Inband Mgmt Knob should be Enabled)",
				MarkdownDescription: "Enable POAP over Inband Interface (Pre-req: Inband Mgmt Knob should be Enabled)",
			},
			"inband_enable_prev": schema.BoolAttribute{
				Computed:            true,
				Description:         "Previous state of Enable POAP over Inband Interface",
				MarkdownDescription: "Previous state of Enable POAP over Inband Interface",
			},
			"inband_mgmt": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Import switches with inband connectivity",
				MarkdownDescription: "Import switches with inband connectivity",
			},
			"inband_mgmt_prev": schema.BoolAttribute{
				Computed:            true,
				Description:         "Previous state of Inband Management",
				MarkdownDescription: "Previous state of Inband Management",
			},
			"intf_stat_load_interval": schema.Int64Attribute{
				Optional:            true,
				Computed:            true,
				Description:         "Time in seconds",
				MarkdownDescription: "Time in seconds",
			},
			"is_read_only": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "If enabled, fabric is only monitored. No configuration will be deployed",
				MarkdownDescription: "If enabled, fabric is only monitored. No configuration will be deployed",
			},
			"loopback0_ip_range": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Underlay Routing Loopback IP Range",
				MarkdownDescription: "Underlay Routing Loopback IP Range",
			},
			"mgmt_gw": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Default Gateway For Management VRF On The Switch",
				MarkdownDescription: "Default Gateway For Management VRF On The Switch",
			},
			"mgmt_gw_internal": schema.StringAttribute{
				Computed:            true,
				Description:         "Internal Management Gateway",
				MarkdownDescription: "Internal Management Gateway",
			},
			"mgmt_prefix": schema.Int64Attribute{
				Optional:            true,
				Computed:            true,
				Description:         "Switch Mgmt IP Subnet Prefix",
				MarkdownDescription: "Switch Mgmt IP Subnet Prefix",
			},
			"mgmt_prefix_internal": schema.Int64Attribute{
				Computed:            true,
				Description:         "Internal Management Prefix",
				MarkdownDescription: "Internal Management Prefix",
			},
			"mgmt_v6prefix": schema.Int64Attribute{
				Optional:            true,
				Computed:            true,
				Description:         "Switch Mgmt IPv6 Subnet Prefix (Min:64, Max:126)",
				MarkdownDescription: "Switch Mgmt IPv6 Subnet Prefix (Min:64, Max:126)",
			},
			"mgmt_v6prefix_internal": schema.Int64Attribute{
				Computed:            true,
				Description:         "Internal Management IPv6 Prefix",
				MarkdownDescription: "Internal Management IPv6 Prefix",
			},
			"mpls_handoff": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Enable MPLS Handoff",
				MarkdownDescription: "Enable MPLS Handoff",
			},
			"mpls_lb_id": schema.Int64Attribute{
				Optional:            true,
				Computed:            true,
				Description:         "(Min:0, Max:1023)",
				MarkdownDescription: "(Min:0, Max:1023)",
			},
			"mpls_loopback_ip_range": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "MPLS Loopback IP Address Range",
				MarkdownDescription: "MPLS Loopback IP Address Range",
			},
			"mso_connectivity_deployed": schema.StringAttribute{
				Computed:            true,
				Description:         "MSO Connectivity Deployed",
				MarkdownDescription: "MSO Connectivity Deployed",
			},
			"mso_controler_id": schema.StringAttribute{
				Computed:            true,
				Description:         "MSO Controller ID",
				MarkdownDescription: "MSO Controller ID",
			},
			"mso_site_group_name": schema.StringAttribute{
				Computed:            true,
				Description:         "MSO Site Group Name",
				MarkdownDescription: "MSO Site Group Name",
			},
			"mso_site_id": schema.StringAttribute{
				Computed:            true,
				Description:         "MSO Site ID",
				MarkdownDescription: "MSO Site ID",
			},
			"netflow_exporter_list": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "One or Multiple Netflow Exporters",
				MarkdownDescription: "One or Multiple Netflow Exporters",
			},
			"netflow_monitor_list": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "One or Multiple Netflow Monitors",
				MarkdownDescription: "One or Multiple Netflow Monitors",
			},
			"netflow_record_list": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "One or Multiple Netflow Records",
				MarkdownDescription: "One or Multiple Netflow Records",
			},
			"netflow_sampler_list": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "One or multiple netflow Samplers. Applicable to N7K only",
				MarkdownDescription: "One or multiple netflow Samplers. Applicable to N7K only",
			},
			"nxapi_http_port": schema.Int64Attribute{
				Optional:            true,
				Computed:            true,
				Description:         "NX-API HTTP Port Number",
				MarkdownDescription: "NX-API HTTP Port Number",
			},
			"nxapi_https_port": schema.Int64Attribute{
				Optional:            true,
				Computed:            true,
				Description:         "NX-API HTTPS Port Number",
				MarkdownDescription: "NX-API HTTPS Port Number",
			},
			"nxc_dest_vrf": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "VRF to be used to reach Nexus Cloud, enter 'management' for management VRF and 'default' for default VRF",
				MarkdownDescription: "VRF to be used to reach Nexus Cloud, enter 'management' for management VRF and 'default' for default VRF",
			},
			"nxc_proxy_port": schema.Int64Attribute{
				Optional:            true,
				Computed:            true,
				Description:         "Proxy port number, default is 8080",
				MarkdownDescription: "Proxy port number, default is 8080",
			},
			"nxc_proxy_server": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "IPv4 or IPv6 address, or DNS name of the proxy server",
				MarkdownDescription: "IPv4 or IPv6 address, or DNS name of the proxy server",
			},
			"nxc_src_intf": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Source interface for communication to Nexus Cloud, mandatory if Destination VRF is not management",
				MarkdownDescription: "Source interface for communication to Nexus Cloud, mandatory if Destination VRF is not management",
			},
			"overwrite_global_nxc": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "If enabled, Fabric NxCloud Settings will be used",
				MarkdownDescription: "If enabled, Fabric NxCloud Settings will be used",
			},
			"pm_enable": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Enable Performance Monitoring (For NX-OS and IOS XE Switches Only)",
				MarkdownDescription: "Enable Performance Monitoring (For NX-OS and IOS XE Switches Only)",
			},
			"pm_enable_prev": schema.BoolAttribute{
				Computed:            true,
				Description:         "Previous state of Enable Performance Monitoring",
				MarkdownDescription: "Previous state of Enable Performance Monitoring",
			},
			"pnp_enable": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Enable Plug n Play (Automatic IP Assignment) for Cat9K switches",
				MarkdownDescription: "Enable Plug n Play (Automatic IP Assignment) for Cat9K switches",
			},
			"pnp_enable_internal": schema.BoolAttribute{
				Computed:            true,
				Description:         "Internal PnP Enable",
				MarkdownDescription: "Internal PnP Enable",
			},
			"power_redundancy_mode": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Default Power Supply Mode For Bootstrapped NX-OS Switches",
				MarkdownDescription: "Default Power Supply Mode For Bootstrapped NX-OS Switches",
				Validators: []validator.String{
					stringvalidator.OneOf("ps-redundant", "combined", "insrc-redundant"),
				},
			},
			"premso_parent_fabric": schema.StringAttribute{
				Computed:            true,
				Description:         "Pre-MSO Parent Fabric",
				MarkdownDescription: "Pre-MSO Parent Fabric",
			},
			"ptp_domain_id": schema.Int64Attribute{
				Optional:            true,
				Computed:            true,
				Description:         "Multiple Independent PTP Clocking Subdomains on a Single Network",
				MarkdownDescription: "Multiple Independent PTP Clocking Subdomains on a Single Network",
			},
			"ptp_lb_id": schema.Int64Attribute{
				Optional:            true,
				Computed:            true,
				Description:         "(Min:0, Max:1023)",
				MarkdownDescription: "(Min:0, Max:1023)",
			},
			"scheduled_time": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Time (UTC) in 24hr format. (00:00 to 23:59)",
				MarkdownDescription: "Time (UTC) in 24hr format. (00:00 to 23:59)",
			},
			"snmp_server_host_trap": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Configure NDFC as a receiver for SNMP traps",
				MarkdownDescription: "Configure NDFC as a receiver for SNMP traps",
			},
			"subinterface_range": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Per Border Dot1q Range For VRF Lite Connectivity (Min:2, Max:4093)",
				MarkdownDescription: "Per Border Dot1q Range For VRF Lite Connectivity (Min:2, Max:4093)",
			},
		},
		Description:         "Resource to configure an Multi-Site Network Fabric. Only creation/updation/deletion of the fabric is supported, resources on top of the fabric are not supported yet.",
		MarkdownDescription: "Resource to configure an Multi-Site Network Fabric. Only creation/updation/deletion of the fabric is supported, resources on top of the fabric are not supported yet.",
	}
}

type FabricMsiteExtNetModel struct {
	AaaRemoteIpEnabled           types.Bool   `tfsdk:"aaa_remote_ip_enabled"`
	AaaServerConf                types.String `tfsdk:"aaa_server_conf"`
	AllowNxc                     types.Bool   `tfsdk:"allow_nxc"`
	AllowNxcPrev                 types.Bool   `tfsdk:"allow_nxc_prev"`
	BgpAs                        types.String `tfsdk:"bgp_as"`
	BootstrapConf                types.String `tfsdk:"bootstrap_conf"`
	BootstrapConfXe              types.String `tfsdk:"bootstrap_conf_xe"`
	BootstrapEnable              types.Bool   `tfsdk:"bootstrap_enable"`
	BootstrapMultisubnet         types.String `tfsdk:"bootstrap_multisubnet"`
	BootstrapMultisubnetInternal types.String `tfsdk:"bootstrap_multisubnet_internal"`
	CdpEnable                    types.Bool   `tfsdk:"cdp_enable"`
	DciSubnetRange               types.String `tfsdk:"dci_subnet_range"`
	DciSubnetTargetMask          types.Int64  `tfsdk:"dci_subnet_target_mask"`
	Deploy                       types.Bool   `tfsdk:"deploy"`
	DeploymentFreeze             types.Bool   `tfsdk:"deployment_freeze"`
	DeploymentStatus             types.String `tfsdk:"deployment_status"`
	DhcpEnable                   types.Bool   `tfsdk:"dhcp_enable"`
	DhcpEnd                      types.String `tfsdk:"dhcp_end"`
	DhcpEndInternal              types.String `tfsdk:"dhcp_end_internal"`
	DhcpIpv6Enable               types.String `tfsdk:"dhcp_ipv6_enable"`
	DhcpIpv6EnableInternal       types.String `tfsdk:"dhcp_ipv6_enable_internal"`
	DhcpStart                    types.String `tfsdk:"dhcp_start"`
	DhcpStartInternal            types.String `tfsdk:"dhcp_start_internal"`
	DomainName                   types.String `tfsdk:"domain_name"`
	DomainNameInternal           types.String `tfsdk:"domain_name_internal"`
	EnableAaa                    types.Bool   `tfsdk:"enable_aaa"`
	EnableNetflow                types.Bool   `tfsdk:"enable_netflow"`
	EnableNetflowPrev            types.Bool   `tfsdk:"enable_netflow_prev"`
	EnableNxapi                  types.Bool   `tfsdk:"enable_nxapi"`
	EnableNxapiHttp              types.Bool   `tfsdk:"enable_nxapi_http"`
	EnableRealTimeBackup         types.Bool   `tfsdk:"enable_real_time_backup"`
	EnableRtIntfStats            types.Bool   `tfsdk:"enable_rt_intf_stats"`
	EnableScheduledBackup        types.Bool   `tfsdk:"enable_scheduled_backup"`
	ExtFabricType                types.String `tfsdk:"ext_fabric_type"`
	FabricFreeform               types.String `tfsdk:"fabric_freeform"`
	FabricName                   types.String `tfsdk:"fabric_name"`
	FabricType                   types.String `tfsdk:"fabric_type"`
	FeaturePtp                   types.Bool   `tfsdk:"feature_ptp"`
	FeaturePtpInternal           types.Bool   `tfsdk:"feature_ptp_internal"`
	Ff                           types.String `tfsdk:"ff"`
	Id                           types.String `tfsdk:"id"`
	InbandEnable                 types.Bool   `tfsdk:"inband_enable"`
	InbandEnablePrev             types.Bool   `tfsdk:"inband_enable_prev"`
	InbandMgmt                   types.Bool   `tfsdk:"inband_mgmt"`
	InbandMgmtPrev               types.Bool   `tfsdk:"inband_mgmt_prev"`
	IntfStatLoadInterval         types.Int64  `tfsdk:"intf_stat_load_interval"`
	IsReadOnly                   types.Bool   `tfsdk:"is_read_only"`
	Loopback0IpRange             types.String `tfsdk:"loopback0_ip_range"`
	MgmtGw                       types.String `tfsdk:"mgmt_gw"`
	MgmtGwInternal               types.String `tfsdk:"mgmt_gw_internal"`
	MgmtPrefix                   types.Int64  `tfsdk:"mgmt_prefix"`
	MgmtPrefixInternal           types.Int64  `tfsdk:"mgmt_prefix_internal"`
	MgmtV6prefix                 types.Int64  `tfsdk:"mgmt_v6prefix"`
	MgmtV6prefixInternal         types.Int64  `tfsdk:"mgmt_v6prefix_internal"`
	MplsHandoff                  types.Bool   `tfsdk:"mpls_handoff"`
	MplsLbId                     types.Int64  `tfsdk:"mpls_lb_id"`
	MplsLoopbackIpRange          types.String `tfsdk:"mpls_loopback_ip_range"`
	MsoConnectivityDeployed      types.String `tfsdk:"mso_connectivity_deployed"`
	MsoControlerId               types.String `tfsdk:"mso_controler_id"`
	MsoSiteGroupName             types.String `tfsdk:"mso_site_group_name"`
	MsoSiteId                    types.String `tfsdk:"mso_site_id"`
	NetflowExporterList          types.String `tfsdk:"netflow_exporter_list"`
	NetflowMonitorList           types.String `tfsdk:"netflow_monitor_list"`
	NetflowRecordList            types.String `tfsdk:"netflow_record_list"`
	NetflowSamplerList           types.String `tfsdk:"netflow_sampler_list"`
	NxapiHttpPort                types.Int64  `tfsdk:"nxapi_http_port"`
	NxapiHttpsPort               types.Int64  `tfsdk:"nxapi_https_port"`
	NxcDestVrf                   types.String `tfsdk:"nxc_dest_vrf"`
	NxcProxyPort                 types.Int64  `tfsdk:"nxc_proxy_port"`
	NxcProxyServer               types.String `tfsdk:"nxc_proxy_server"`
	NxcSrcIntf                   types.String `tfsdk:"nxc_src_intf"`
	OverwriteGlobalNxc           types.Bool   `tfsdk:"overwrite_global_nxc"`
	PmEnable                     types.Bool   `tfsdk:"pm_enable"`
	PmEnablePrev                 types.Bool   `tfsdk:"pm_enable_prev"`
	PnpEnable                    types.Bool   `tfsdk:"pnp_enable"`
	PnpEnableInternal            types.Bool   `tfsdk:"pnp_enable_internal"`
	PowerRedundancyMode          types.String `tfsdk:"power_redundancy_mode"`
	PremsoParentFabric           types.String `tfsdk:"premso_parent_fabric"`
	PtpDomainId                  types.Int64  `tfsdk:"ptp_domain_id"`
	PtpLbId                      types.Int64  `tfsdk:"ptp_lb_id"`
	ScheduledTime                types.String `tfsdk:"scheduled_time"`
	SnmpServerHostTrap           types.Bool   `tfsdk:"snmp_server_host_trap"`
	SubinterfaceRange            types.String `tfsdk:"subinterface_range"`
}
