// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package resource_vpc_pair

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework-validators/setvalidator"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
)

func VpcPairResourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Attributes: map[string]schema.Attribute{
			"admin_state": schema.BoolAttribute{
				Optional:            true,
				Description:         "Admin state of the vPC pair",
				MarkdownDescription: "Admin state of the vPC pair",
			},
			"allowed_vlans": schema.StringAttribute{
				Optional:            true,
				Description:         "Allowed VLANs for the vPC pair",
				MarkdownDescription: "Allowed VLANs for the vPC pair",
			},
			"clear_policy": schema.BoolAttribute{
				Optional:            true,
				Description:         "Set to true to clear policy",
				MarkdownDescription: "Set to true to clear policy",
			},
			"domain_id": schema.Int64Attribute{
				Optional:            true,
				Description:         "vPC Domain ID",
				MarkdownDescription: "vPC Domain ID",
			},
			"fabric_name": schema.StringAttribute{
				Optional:            true,
				Description:         "Fabric name to which the vPC pair belongs",
				MarkdownDescription: "Fabric name to which the vPC pair belongs",
				PlanModifiers: []planmodifier.String{
					stringplanmodifier.RequiresReplace(),
				},
			},
			"fabricpath_switch_id": schema.StringAttribute{
				Optional:            true,
				Description:         "Fabric path switch ID",
				MarkdownDescription: "Fabric path switch ID",
			},
			"id": schema.StringAttribute{
				Computed:            true,
				Description:         "The Terraform Unique Identifier for the vPC pair resource",
				MarkdownDescription: "The Terraform Unique Identifier for the vPC pair resource",
			},
			"is_vpc_plus": schema.BoolAttribute{
				Optional:            true,
				Description:         "Set to true to enable VPC plus",
				MarkdownDescription: "Set to true to enable VPC plus",
			},
			"is_vteps": schema.BoolAttribute{
				Optional:            true,
				Description:         "Set to true to enable VTEPs",
				MarkdownDescription: "Set to true to enable VTEPs",
			},
			"keep_alive_hold_timeout": schema.Int64Attribute{
				Optional:            true,
				Description:         "Hold timeout to ignore stale peer alive messages, default is 3 if not specified, Mandatory",
				MarkdownDescription: "Hold timeout to ignore stale peer alive messages, default is 3 if not specified, Mandatory",
			},
			"keep_alive_vrf": schema.StringAttribute{
				Optional:            true,
				Description:         "Name of VRF used for keep-alive, enter 'default' for default VRF",
				MarkdownDescription: "Name of VRF used for keep-alive, enter 'default' for default VRF",
			},
			"loopback_secondary_ip": schema.StringAttribute{
				Optional:            true,
				Description:         "Secondary loopback IP address",
				MarkdownDescription: "Secondary loopback IP address",
			},
			"nve_interface": schema.StringAttribute{
				Optional:            true,
				Description:         "NVE interface",
				MarkdownDescription: "NVE interface",
			},
			"pc_mode": schema.StringAttribute{
				Optional:            true,
				Description:         "Port-channel mode",
				MarkdownDescription: "Port-channel mode",
			},
			"peer1_domain_conf": schema.StringAttribute{
				Optional:            true,
				Description:         "Additional CLI for Peer-1 vPC Domain",
				MarkdownDescription: "Additional CLI for Peer-1 vPC Domain",
			},
			"peer1_keep_alive_local_ip": schema.StringAttribute{
				Optional:            true,
				Description:         "IP address of a L3 interface in non-default VRF on Peer 1",
				MarkdownDescription: "IP address of a L3 interface in non-default VRF on Peer 1",
			},
			"peer1_member_interfaces": schema.StringAttribute{
				Optional:            true,
				Description:         "List of member interfaces for Peer 1",
				MarkdownDescription: "List of member interfaces for Peer 1",
			},
			"peer1_pcid": schema.StringAttribute{
				Optional:            true,
				Description:         "Peer 1 PCID",
				MarkdownDescription: "Peer 1 PCID",
			},
			"peer1_po_conf": schema.StringAttribute{
				Optional:            true,
				Description:         "Additional CLI for Peer-1 Port-channel",
				MarkdownDescription: "Additional CLI for Peer-1 Port-channel",
			},
			"peer1_po_desc": schema.StringAttribute{
				Optional:            true,
				Description:         "Port-channel description for Peer 1",
				MarkdownDescription: "Port-channel description for Peer 1",
			},
			"peer1_primary_ip": schema.StringAttribute{
				Optional:            true,
				Description:         "Primary IP address for Peer 1",
				MarkdownDescription: "Primary IP address for Peer 1",
			},
			"peer1_source_loopback": schema.StringAttribute{
				Optional:            true,
				Description:         "Source loopback IP address for Peer 1",
				MarkdownDescription: "Source loopback IP address for Peer 1",
			},
			"peer2_keep_alive_local_ip": schema.StringAttribute{
				Optional:            true,
				Description:         "IP address of a L3 interface in non-default VRF on Peer 2",
				MarkdownDescription: "IP address of a L3 interface in non-default VRF on Peer 2",
			},
			"peer2_member_interfaces": schema.StringAttribute{
				Optional:            true,
				Description:         "List of member interfaces for Peer 2",
				MarkdownDescription: "List of member interfaces for Peer 2",
			},
			"peer2_pcid": schema.StringAttribute{
				Optional:            true,
				Description:         "Peer 2 PCID",
				MarkdownDescription: "Peer 2 PCID",
			},
			"peer2_po_conf": schema.StringAttribute{
				Optional:            true,
				Description:         "Additional CLI for Peer-2 Port-channel",
				MarkdownDescription: "Additional CLI for Peer-2 Port-channel",
			},
			"peer2_po_desc": schema.StringAttribute{
				Optional:            true,
				Description:         "Port-channel description for Peer 2",
				MarkdownDescription: "Port-channel description for Peer 2",
			},
			"peer2_primary_ip": schema.StringAttribute{
				Optional:            true,
				Description:         "Primary IP address for Peer 2",
				MarkdownDescription: "Primary IP address for Peer 2",
			},
			"peer2_source_loopback": schema.StringAttribute{
				Optional:            true,
				Description:         "Source loopback IP address for Peer 2",
				MarkdownDescription: "Source loopback IP address for Peer 2",
			},
			"serial_numbers": schema.SetAttribute{
				ElementType:         types.StringType,
				Required:            true,
				Description:         "Serial numbers of the switches in the vPC pair. Must contain exactly two serial numbers.",
				MarkdownDescription: "Serial numbers of the switches in the vPC pair. Must contain exactly two serial numbers.",
				Validators: []validator.Set{
					setvalidator.SizeBetween(2, 2),
				},
			},
			"template_name": schema.StringAttribute{
				Optional:            true,
				Description:         "Template to be applied to this VPC switch pair",
				MarkdownDescription: "Template to be applied to this VPC switch pair",
			},
			"use_virtual_peerlink": schema.BoolAttribute{
				Required:            true,
				Description:         "Set to true to use virtual peer link",
				MarkdownDescription: "Set to true to use virtual peer link",
			},
		},
	}
}

type VpcPairModel struct {
	AdminState            types.Bool   `tfsdk:"admin_state"`
	AllowedVlans          types.String `tfsdk:"allowed_vlans"`
	ClearPolicy           types.Bool   `tfsdk:"clear_policy"`
	DomainId              types.Int64  `tfsdk:"domain_id"`
	FabricName            types.String `tfsdk:"fabric_name"`
	FabricpathSwitchId    types.String `tfsdk:"fabricpath_switch_id"`
	Id                    types.String `tfsdk:"id"`
	IsVpcPlus             types.Bool   `tfsdk:"is_vpc_plus"`
	IsVteps               types.Bool   `tfsdk:"is_vteps"`
	KeepAliveHoldTimeout  types.Int64  `tfsdk:"keep_alive_hold_timeout"`
	KeepAliveVrf          types.String `tfsdk:"keep_alive_vrf"`
	LoopbackSecondaryIp   types.String `tfsdk:"loopback_secondary_ip"`
	NveInterface          types.String `tfsdk:"nve_interface"`
	PcMode                types.String `tfsdk:"pc_mode"`
	Peer1DomainConf       types.String `tfsdk:"peer1_domain_conf"`
	Peer1KeepAliveLocalIp types.String `tfsdk:"peer1_keep_alive_local_ip"`
	Peer1MemberInterfaces types.String `tfsdk:"peer1_member_interfaces"`
	Peer1Pcid             types.String `tfsdk:"peer1_pcid"`
	Peer1PoConf           types.String `tfsdk:"peer1_po_conf"`
	Peer1PoDesc           types.String `tfsdk:"peer1_po_desc"`
	Peer1PrimaryIp        types.String `tfsdk:"peer1_primary_ip"`
	Peer1SourceLoopback   types.String `tfsdk:"peer1_source_loopback"`
	Peer2KeepAliveLocalIp types.String `tfsdk:"peer2_keep_alive_local_ip"`
	Peer2MemberInterfaces types.String `tfsdk:"peer2_member_interfaces"`
	Peer2Pcid             types.String `tfsdk:"peer2_pcid"`
	Peer2PoConf           types.String `tfsdk:"peer2_po_conf"`
	Peer2PoDesc           types.String `tfsdk:"peer2_po_desc"`
	Peer2PrimaryIp        types.String `tfsdk:"peer2_primary_ip"`
	Peer2SourceLoopback   types.String `tfsdk:"peer2_source_loopback"`
	SerialNumbers         types.Set    `tfsdk:"serial_numbers"`
	TemplateName          types.String `tfsdk:"template_name"`
	UseVirtualPeerlink    types.Bool   `tfsdk:"use_virtual_peerlink"`
}
