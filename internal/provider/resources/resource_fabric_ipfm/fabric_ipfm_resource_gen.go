// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package resource_fabric_ipfm

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/booldefault"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/int64default"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringdefault"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
)

func FabricIpfmResourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Attributes: map[string]schema.Attribute{
			"aaa_remote_ip_enabled": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Enable only when IP Authorization is enabled in the AAA Server",
				MarkdownDescription: "Enable only when IP Authorization is enabled in the AAA Server",
				Default:             booldefault.StaticBool(false),
			},
			"aaa_server_conf": schema.StringAttribute{
				Optional:            true,
				Description:         "AAA Configurations",
				MarkdownDescription: "AAA Configurations",
			},
			"asm_group_ranges": schema.StringAttribute{
				Optional:            true,
				Description:         "ASM group ranges with prefixes (len:4-32) example: 239.1.1.0/25, max 20 ranges. Enabling SPT-Threshold Infinity to prevent switchover to source-tree.",
				MarkdownDescription: "ASM group ranges with prefixes (len:4-32) example: 239.1.1.0/25, max 20 ranges. Enabling SPT-Threshold Infinity to prevent switchover to source-tree.",
			},
			"bootstrap_conf": schema.StringAttribute{
				Optional:            true,
				Description:         "Additional CLIs required during device bootup/login e.g. AAA/Radius",
				MarkdownDescription: "Additional CLIs required during device bootup/login e.g. AAA/Radius",
			},
			"bootstrap_enable": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Automatic IP Assignment For POAP",
				MarkdownDescription: "Automatic IP Assignment For POAP",
				Default:             booldefault.StaticBool(false),
			},
			"bootstrap_multisubnet": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "lines with # prefix are ignored here",
				MarkdownDescription: "lines with # prefix are ignored here",
				Default:             stringdefault.StaticString("#Scope_Start_IP, Scope_End_IP, Scope_Default_Gateway, Scope_Subnet_Prefix"),
			},
			"cdp_enable": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Enable CDP on management interface",
				MarkdownDescription: "Enable CDP on management interface",
				Default:             booldefault.StaticBool(false),
			},
			"deploy": schema.BoolAttribute{
				Required:            true,
				Description:         "This flag does configuration save and deploy",
				MarkdownDescription: "This flag does configuration save and deploy",
			},
			"deployment_status": schema.StringAttribute{
				Computed:            true,
				Description:         "This fields shows the actual status of the deployment. It can be one of the following: Deployment pending Deployment successful",
				MarkdownDescription: "This fields shows the actual status of the deployment. It can be one of the following: Deployment pending Deployment successful",
			},
			"dhcp_enable": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Automatic IP Assignment For POAP From Local DHCP Server",
				MarkdownDescription: "Automatic IP Assignment For POAP From Local DHCP Server",
				Default:             booldefault.StaticBool(false),
			},
			"dhcp_end": schema.StringAttribute{
				Optional:            true,
				Description:         "End Address For Switch Out-of-Band POAP",
				MarkdownDescription: "End Address For Switch Out-of-Band POAP",
			},
			"dhcp_ipv6_enable": schema.StringAttribute{
				Optional:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
				Validators: []validator.String{
					stringvalidator.OneOf("DHCPv4"),
				},
			},
			"dhcp_start": schema.StringAttribute{
				Optional:            true,
				Description:         "Start Address For Switch Out-of-Band POAP",
				MarkdownDescription: "Start Address For Switch Out-of-Band POAP",
			},
			"dns_server_ip_list": schema.StringAttribute{
				Optional:            true,
				Description:         "Comma separated list of IP Addresses (v4/v6)",
				MarkdownDescription: "Comma separated list of IP Addresses (v4/v6)",
			},
			"dns_server_vrf": schema.StringAttribute{
				Optional:            true,
				Description:         "One VRF for all DNS servers or a comma separated list of VRFs, one per DNS server",
				MarkdownDescription: "One VRF for all DNS servers or a comma separated list of VRFs, one per DNS server",
			},
			"enable_aaa": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Include AAA configs from Manageability tab during device bootup",
				MarkdownDescription: "Include AAA configs from Manageability tab during device bootup",
				Default:             booldefault.StaticBool(false),
			},
			"enable_asm": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Enable groups with receivers sending (*,G) joins",
				MarkdownDescription: "Enable groups with receivers sending (*,G) joins",
				Default:             booldefault.StaticBool(false),
			},
			"enable_nbm_passive": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Enable NBM mode to pim-passive for default VRF",
				MarkdownDescription: "Enable NBM mode to pim-passive for default VRF",
				Default:             booldefault.StaticBool(false),
			},
			"extra_conf_intra_links": schema.StringAttribute{
				Optional:            true,
				Description:         "Additional CLIs For All Intra-Fabric Links",
				MarkdownDescription: "Additional CLIs For All Intra-Fabric Links",
			},
			"extra_conf_leaf": schema.StringAttribute{
				Optional:            true,
				Description:         "Additional CLIs For All Leafs and Tier2 Leafs As Captured From Show Running Configuration",
				MarkdownDescription: "Additional CLIs For All Leafs and Tier2 Leafs As Captured From Show Running Configuration",
			},
			"extra_conf_spine": schema.StringAttribute{
				Optional:            true,
				Description:         "Additional CLIs For All Spines As Captured From Show Running Configuration",
				MarkdownDescription: "Additional CLIs For All Spines As Captured From Show Running Configuration",
			},
			"fabric_interface_type": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Only Numbered(Point-to-Point) is supported",
				MarkdownDescription: "Only Numbered(Point-to-Point) is supported",
				Validators: []validator.String{
					stringvalidator.OneOf("p2p"),
				},
				Default: stringdefault.StaticString("p2p"),
			},
			"fabric_mtu": schema.Int64Attribute{
				Optional:            true,
				Computed:            true,
				Description:         "Must be an even number",
				MarkdownDescription: "Must be an even number",
				Default:             int64default.StaticInt64(9216),
			},
			"fabric_name": schema.StringAttribute{
				Required:            true,
				Description:         "Fabric name to be created, updated or deleted (Max Size 64).",
				MarkdownDescription: "Fabric name to be created, updated or deleted (Max Size 64).",
				PlanModifiers: []planmodifier.String{
					stringplanmodifier.RequiresReplace(),
				},
			},
			"feature_ptp": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
				Default:             booldefault.StaticBool(false),
			},
			"id": schema.StringAttribute{
				Computed:            true,
				Description:         "Terraform unique Id for the fabric resource",
				MarkdownDescription: "Terraform unique Id for the fabric resource",
			},
			"isis_auth_enable": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
				Default:             booldefault.StaticBool(false),
			},
			"isis_auth_key": schema.StringAttribute{
				Optional:            true,
				Description:         "Cisco Type 7 Encrypted",
				MarkdownDescription: "Cisco Type 7 Encrypted",
			},
			"isis_auth_keychain_key_id": schema.Int64Attribute{
				Optional:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
			},
			"isis_auth_keychain_name": schema.StringAttribute{
				Optional:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
			},
			"isis_level": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Supported IS types: level-1, level-2",
				MarkdownDescription: "Supported IS types: level-1, level-2",
				Validators: []validator.String{
					stringvalidator.OneOf("level-1", "level-2"),
				},
				Default: stringdefault.StaticString("level-2"),
			},
			"isis_p2p_enable": schema.BoolAttribute{
				Optional:            true,
				Description:         "This will enable network point-to-point on fabric interfaces which are numbered",
				MarkdownDescription: "This will enable network point-to-point on fabric interfaces which are numbered",
			},
			"l2_host_intf_mtu": schema.Int64Attribute{
				Optional:            true,
				Computed:            true,
				Description:         "Must be an even number",
				MarkdownDescription: "Must be an even number",
				Default:             int64default.StaticInt64(9216),
			},
			"link_state_routing": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Used for Spine-Leaf Connectivity",
				MarkdownDescription: "Used for Spine-Leaf Connectivity",
				Validators: []validator.String{
					stringvalidator.OneOf("ospf", "is-is"),
				},
				Default: stringdefault.StaticString("ospf"),
			},
			"link_state_routing_tag": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Routing process tag for the fabric",
				MarkdownDescription: "Routing process tag for the fabric",
				Default:             stringdefault.StaticString("1"),
			},
			"loopback0_ip_range": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Routing Loopback IP Address Range",
				MarkdownDescription: "Routing Loopback IP Address Range",
				Default:             stringdefault.StaticString("10.2.0.0/22"),
			},
			"mgmt_gw": schema.StringAttribute{
				Optional:            true,
				Description:         "Default Gateway For Management VRF On The Switch",
				MarkdownDescription: "Default Gateway For Management VRF On The Switch",
			},
			"mgmt_prefix": schema.Int64Attribute{
				Optional:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
			},
			"ntp_server_ip_list": schema.StringAttribute{
				Optional:            true,
				Description:         "Comma separated list of IP Addresses (v4/v6)",
				MarkdownDescription: "Comma separated list of IP Addresses (v4/v6)",
			},
			"ntp_server_vrf": schema.StringAttribute{
				Optional:            true,
				Description:         "One VRF for all NTP servers or a comma separated list of VRFs, one per NTP server",
				MarkdownDescription: "One VRF for all NTP servers or a comma separated list of VRFs, one per NTP server",
			},
			"nxapi_vrf": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "VRF used for NX-API communication",
				MarkdownDescription: "VRF used for NX-API communication",
				Validators: []validator.String{
					stringvalidator.OneOf("management", "default"),
				},
				Default: stringdefault.StaticString("management"),
			},
			"ospf_area_id": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "OSPF Area Id in IP address format",
				MarkdownDescription: "OSPF Area Id in IP address format",
				Default:             stringdefault.StaticString("0.0.0.0"),
			},
			"ospf_auth_enable": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
				Default:             booldefault.StaticBool(false),
			},
			"ospf_auth_key": schema.StringAttribute{
				Optional:            true,
				Description:         "3DES Encrypted",
				MarkdownDescription: "3DES Encrypted",
			},
			"ospf_auth_key_id": schema.Int64Attribute{
				Optional:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
			},
			"pim_hello_auth_enable": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
				Default:             booldefault.StaticBool(false),
			},
			"pim_hello_auth_key": schema.StringAttribute{
				Optional:            true,
				Description:         "3DES Encrypted",
				MarkdownDescription: "3DES Encrypted",
			},
			"pm_enable": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
				Default:             booldefault.StaticBool(false),
			},
			"power_redundancy_mode": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Default power supply mode for the fabric",
				MarkdownDescription: "Default power supply mode for the fabric",
				Validators: []validator.String{
					stringvalidator.OneOf("ps-redundant", "combined", "insrc-redundant"),
				},
				Default: stringdefault.StaticString("ps-redundant"),
			},
			"ptp_domain_id": schema.Int64Attribute{
				Optional:            true,
				Description:         "Multiple Independent PTP Clocking Subdomains on a Single Network",
				MarkdownDescription: "Multiple Independent PTP Clocking Subdomains on a Single Network",
			},
			"ptp_lb_id": schema.Int64Attribute{
				Optional:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
			},
			"ptp_profile": schema.StringAttribute{
				Optional:            true,
				Description:         "Enabled on ISL links only",
				MarkdownDescription: "Enabled on ISL links only",
				Validators: []validator.String{
					stringvalidator.OneOf("IEEE-1588v2", "SMPTE-2059-2", "AES67-2015"),
				},
			},
			"routing_lb_id": schema.Int64Attribute{
				Optional:            true,
				Computed:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
				Default:             int64default.StaticInt64(0),
			},
			"rp_ip_range": schema.StringAttribute{
				Optional:            true,
				Description:         "RP Loopback IP Address Range",
				MarkdownDescription: "RP Loopback IP Address Range",
			},
			"rp_lb_id": schema.Int64Attribute{
				Optional:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
			},
			"snmp_server_host_trap": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Configure NDFC as a receiver for SNMP traps",
				MarkdownDescription: "Configure NDFC as a receiver for SNMP traps",
				Default:             booldefault.StaticBool(true),
			},
			"static_underlay_ip_alloc": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Checking this will disable Dynamic Fabric IP Address Allocations",
				MarkdownDescription: "Checking this will disable Dynamic Fabric IP Address Allocations",
				Default:             booldefault.StaticBool(false),
			},
			"subnet_range": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Address range to assign Numbered IPs",
				MarkdownDescription: "Address range to assign Numbered IPs",
				Default:             stringdefault.StaticString("10.4.0.0/16"),
			},
			"subnet_target_mask": schema.Int64Attribute{
				Optional:            true,
				Computed:            true,
				Description:         "Mask for Fabric Subnet IP Range",
				MarkdownDescription: "Mask for Fabric Subnet IP Range",
				Validators: []validator.Int64{
					int64validator.OneOf(30, 31),
				},
				Default: int64default.StaticInt64(30),
			},
			"syslog_server_ip_list": schema.StringAttribute{
				Optional:            true,
				Description:         "Comma separated list of IP Addresses (v4/v6)",
				MarkdownDescription: "Comma separated list of IP Addresses (v4/v6)",
			},
			"syslog_server_vrf": schema.StringAttribute{
				Optional:            true,
				Description:         "One VRF for all Syslog servers or a comma separated list of VRFs, one per Syslog server",
				MarkdownDescription: "One VRF for all Syslog servers or a comma separated list of VRFs, one per Syslog server",
			},
			"syslog_sev": schema.StringAttribute{
				Optional:            true,
				Description:         "Comma separated list of Syslog severity values, one per Syslog server",
				MarkdownDescription: "Comma separated list of Syslog severity values, one per Syslog server",
			},
		},
		Description:         "Resource to configure and manage IP Fabric Media",
		MarkdownDescription: "Resource to configure and manage IP Fabric Media",
	}
}

type FabricIpfmModel struct {
	AaaRemoteIpEnabled    types.Bool   `tfsdk:"aaa_remote_ip_enabled"`
	AaaServerConf         types.String `tfsdk:"aaa_server_conf"`
	AsmGroupRanges        types.String `tfsdk:"asm_group_ranges"`
	BootstrapConf         types.String `tfsdk:"bootstrap_conf"`
	BootstrapEnable       types.Bool   `tfsdk:"bootstrap_enable"`
	BootstrapMultisubnet  types.String `tfsdk:"bootstrap_multisubnet"`
	CdpEnable             types.Bool   `tfsdk:"cdp_enable"`
	Deploy                types.Bool   `tfsdk:"deploy"`
	DeploymentStatus      types.String `tfsdk:"deployment_status"`
	DhcpEnable            types.Bool   `tfsdk:"dhcp_enable"`
	DhcpEnd               types.String `tfsdk:"dhcp_end"`
	DhcpIpv6Enable        types.String `tfsdk:"dhcp_ipv6_enable"`
	DhcpStart             types.String `tfsdk:"dhcp_start"`
	DnsServerIpList       types.String `tfsdk:"dns_server_ip_list"`
	DnsServerVrf          types.String `tfsdk:"dns_server_vrf"`
	EnableAaa             types.Bool   `tfsdk:"enable_aaa"`
	EnableAsm             types.Bool   `tfsdk:"enable_asm"`
	EnableNbmPassive      types.Bool   `tfsdk:"enable_nbm_passive"`
	ExtraConfIntraLinks   types.String `tfsdk:"extra_conf_intra_links"`
	ExtraConfLeaf         types.String `tfsdk:"extra_conf_leaf"`
	ExtraConfSpine        types.String `tfsdk:"extra_conf_spine"`
	FabricInterfaceType   types.String `tfsdk:"fabric_interface_type"`
	FabricMtu             types.Int64  `tfsdk:"fabric_mtu"`
	FabricName            types.String `tfsdk:"fabric_name"`
	FeaturePtp            types.Bool   `tfsdk:"feature_ptp"`
	Id                    types.String `tfsdk:"id"`
	IsisAuthEnable        types.Bool   `tfsdk:"isis_auth_enable"`
	IsisAuthKey           types.String `tfsdk:"isis_auth_key"`
	IsisAuthKeychainKeyId types.Int64  `tfsdk:"isis_auth_keychain_key_id"`
	IsisAuthKeychainName  types.String `tfsdk:"isis_auth_keychain_name"`
	IsisLevel             types.String `tfsdk:"isis_level"`
	IsisP2pEnable         types.Bool   `tfsdk:"isis_p2p_enable"`
	L2HostIntfMtu         types.Int64  `tfsdk:"l2_host_intf_mtu"`
	LinkStateRouting      types.String `tfsdk:"link_state_routing"`
	LinkStateRoutingTag   types.String `tfsdk:"link_state_routing_tag"`
	Loopback0IpRange      types.String `tfsdk:"loopback0_ip_range"`
	MgmtGw                types.String `tfsdk:"mgmt_gw"`
	MgmtPrefix            types.Int64  `tfsdk:"mgmt_prefix"`
	NtpServerIpList       types.String `tfsdk:"ntp_server_ip_list"`
	NtpServerVrf          types.String `tfsdk:"ntp_server_vrf"`
	NxapiVrf              types.String `tfsdk:"nxapi_vrf"`
	OspfAreaId            types.String `tfsdk:"ospf_area_id"`
	OspfAuthEnable        types.Bool   `tfsdk:"ospf_auth_enable"`
	OspfAuthKey           types.String `tfsdk:"ospf_auth_key"`
	OspfAuthKeyId         types.Int64  `tfsdk:"ospf_auth_key_id"`
	PimHelloAuthEnable    types.Bool   `tfsdk:"pim_hello_auth_enable"`
	PimHelloAuthKey       types.String `tfsdk:"pim_hello_auth_key"`
	PmEnable              types.Bool   `tfsdk:"pm_enable"`
	PowerRedundancyMode   types.String `tfsdk:"power_redundancy_mode"`
	PtpDomainId           types.Int64  `tfsdk:"ptp_domain_id"`
	PtpLbId               types.Int64  `tfsdk:"ptp_lb_id"`
	PtpProfile            types.String `tfsdk:"ptp_profile"`
	RoutingLbId           types.Int64  `tfsdk:"routing_lb_id"`
	RpIpRange             types.String `tfsdk:"rp_ip_range"`
	RpLbId                types.Int64  `tfsdk:"rp_lb_id"`
	SnmpServerHostTrap    types.Bool   `tfsdk:"snmp_server_host_trap"`
	StaticUnderlayIpAlloc types.Bool   `tfsdk:"static_underlay_ip_alloc"`
	SubnetRange           types.String `tfsdk:"subnet_range"`
	SubnetTargetMask      types.Int64  `tfsdk:"subnet_target_mask"`
	SyslogServerIpList    types.String `tfsdk:"syslog_server_ip_list"`
	SyslogServerVrf       types.String `tfsdk:"syslog_server_vrf"`
	SyslogSev             types.String `tfsdk:"syslog_sev"`
}
