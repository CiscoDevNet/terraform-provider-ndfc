// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package resource_fabric_vxlan_evpn

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/booldefault"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/int64default"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringdefault"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
)

func FabricVxlanEvpnResourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Attributes: map[string]schema.Attribute{
			"aaa_remote_ip_enabled": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Enable only, when IP Authorization is enabled in the AAA Server",
				MarkdownDescription: "Enable only, when IP Authorization is enabled in the AAA Server",
				Default:             booldefault.StaticBool(false),
			},
			"aaa_server_conf": schema.StringAttribute{
				Optional:            true,
				Description:         "AAA Configurations",
				MarkdownDescription: "AAA Configurations",
			},
			"advertise_pip_bgp": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "For Primary VTEP IP Advertisement As Next-Hop Of Prefix Routes",
				MarkdownDescription: "For Primary VTEP IP Advertisement As Next-Hop Of Prefix Routes",
				Default:             booldefault.StaticBool(false),
			},
			"advertise_pip_on_border": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Enable advertise-pip on vPC borders and border gateways only. Applicable only when vPC advertise-pip is not enabled",
				MarkdownDescription: "Enable advertise-pip on vPC borders and border gateways only. Applicable only when vPC advertise-pip is not enabled",
				Default:             booldefault.StaticBool(true),
			},
			"anycast_bgw_advertise_pip": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "To advertise Anycast Border Gateway PIP as VTEP. Effective on MSD fabric Recalculate Config",
				MarkdownDescription: "To advertise Anycast Border Gateway PIP as VTEP. Effective on MSD fabric Recalculate Config",
				Default:             booldefault.StaticBool(false),
			},
			"anycast_gw_mac": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Shared MAC address for all leafs (xxxx.xxxx.xxxx)",
				MarkdownDescription: "Shared MAC address for all leafs (xxxx.xxxx.xxxx)",
				Default:             stringdefault.StaticString("2020.0000.00aa"),
			},
			"anycast_lb_id": schema.Int64Attribute{
				Optional:            true,
				Description:         "Used for vPC Peering in VXLANv6 Fabrics",
				MarkdownDescription: "Used for vPC Peering in VXLANv6 Fabrics",
			},
			"anycast_rp_ip_range": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Anycast or Phantom RP IP Address Range",
				MarkdownDescription: "Anycast or Phantom RP IP Address Range",
				Default:             stringdefault.StaticString("10.254.254.0/24"),
			},
			"auto_symmetric_default_vrf": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Whether to auto generate Default VRF interface and BGP peering configuration on managed neighbor devices. If set, auto created VRF Lite IFC links will have Auto Deploy Default VRF for Peer enabled.",
				MarkdownDescription: "Whether to auto generate Default VRF interface and BGP peering configuration on managed neighbor devices. If set, auto created VRF Lite IFC links will have Auto Deploy Default VRF for Peer enabled.",
				Default:             booldefault.StaticBool(false),
			},
			"auto_symmetric_vrf_lite": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Whether to auto generate VRF LITE sub-interface and BGP peering configuration on managed neighbor devices. If set, auto created VRF Lite IFC links will have Auto Deploy for Peer enabled.",
				MarkdownDescription: "Whether to auto generate VRF LITE sub-interface and BGP peering configuration on managed neighbor devices. If set, auto created VRF Lite IFC links will have Auto Deploy for Peer enabled.",
				Default:             booldefault.StaticBool(false),
			},
			"auto_unique_vrf_lite_ip_prefix": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "When enabled, IP prefix allocated to the VRF LITE IFC is not reused on VRF extension over VRF LITE IFC. Instead, unique IP Subnet is allocated for each VRF extension over VRF LITE IFC.",
				MarkdownDescription: "When enabled, IP prefix allocated to the VRF LITE IFC is not reused on VRF extension over VRF LITE IFC. Instead, unique IP Subnet is allocated for each VRF extension over VRF LITE IFC.",
				Default:             booldefault.StaticBool(false),
			},
			"auto_vrflite_ifc_default_vrf": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Whether to auto generate Default VRF interface and BGP peering configuration on VRF LITE IFC auto deployment. If set, auto created VRF Lite IFC links will have Auto Deploy Default VRF enabled.",
				MarkdownDescription: "Whether to auto generate Default VRF interface and BGP peering configuration on VRF LITE IFC auto deployment. If set, auto created VRF Lite IFC links will have Auto Deploy Default VRF enabled.",
				Default:             booldefault.StaticBool(false),
			},
			"banner": schema.StringAttribute{
				Optional:            true,
				Description:         "Message of the Day (motd) banner. Delimiter char (very first char is delimiter char) followed by message ending with delimiter)",
				MarkdownDescription: "Message of the Day (motd) banner. Delimiter char (very first char is delimiter char) followed by message ending with delimiter)",
			},
			"bfd_auth_enable": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Valid for P2P Interfaces only",
				MarkdownDescription: "Valid for P2P Interfaces only",
				Default:             booldefault.StaticBool(false),
			},
			"bfd_auth_key": schema.StringAttribute{
				Optional:            true,
				Description:         "Encrypted SHA1 secret value",
				MarkdownDescription: "Encrypted SHA1 secret value",
			},
			"bfd_auth_key_id": schema.Int64Attribute{
				Optional:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
			},
			"bfd_enable": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Valid for IPv4 Underlay only",
				MarkdownDescription: "Valid for IPv4 Underlay only",
				Default:             booldefault.StaticBool(false),
			},
			"bfd_ibgp_enable": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
				Default:             booldefault.StaticBool(false),
			},
			"bfd_isis_enable": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
				Default:             booldefault.StaticBool(false),
			},
			"bfd_ospf_enable": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
				Default:             booldefault.StaticBool(false),
			},
			"bfd_pim_enable": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
				Default:             booldefault.StaticBool(false),
			},
			"bgp_as": schema.StringAttribute{
				Required:            true,
				Description:         "1-4294967295 | 1-65535.0-65535 It is a good practice to have a unique ASN for each Fabric.",
				MarkdownDescription: "1-4294967295 | 1-65535.0-65535 It is a good practice to have a unique ASN for each Fabric.",
			},
			"bgp_auth_enable": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
				Default:             booldefault.StaticBool(false),
			},
			"bgp_auth_key": schema.StringAttribute{
				Optional:            true,
				Description:         "Encrypted BGP Authentication Key based on type",
				MarkdownDescription: "Encrypted BGP Authentication Key based on type",
			},
			"bgp_auth_key_type": schema.Int64Attribute{
				Optional:            true,
				Computed:            true,
				Description:         "BGP Key Encryption Type: 3 - 3DES, 7 - Cisco",
				MarkdownDescription: "BGP Key Encryption Type: 3 - 3DES, 7 - Cisco",
				Validators: []validator.Int64{
					int64validator.OneOf(3, 7),
				},
				Default: int64default.StaticInt64(3),
			},
			"bgp_lb_id": schema.Int64Attribute{
				Optional:            true,
				Computed:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
				Default:             int64default.StaticInt64(0),
			},
			"bootstrap_conf": schema.StringAttribute{
				Optional:            true,
				Description:         "Additional CLIs required during device bootup/login e.g. AAA/Radius",
				MarkdownDescription: "Additional CLIs required during device bootup/login e.g. AAA/Radius",
			},
			"bootstrap_enable": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Automatic IP Assignment For POAP",
				MarkdownDescription: "Automatic IP Assignment For POAP",
				Default:             booldefault.StaticBool(false),
			},
			"bootstrap_multisubnet": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "'lines with # prefix are ignored here'",
				MarkdownDescription: "'lines with # prefix are ignored here'",
				Default:             stringdefault.StaticString("#Scope_Start_IP, Scope_End_IP, Scope_Default_Gateway, Scope_Subnet_Prefix"),
			},
			"brownfield_network_name_format": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Generated network name should be < 64 characters",
				MarkdownDescription: "Generated network name should be < 64 characters",
				Default:             stringdefault.StaticString("Auto_Net_VNI$$VNI$$_VLAN$$VLAN_ID$$"),
			},
			"brownfield_skip_overlay_network_attachments": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Enable to skip overlay network interface attachments for Brownfield and Host Port Resync cases",
				MarkdownDescription: "Enable to skip overlay network interface attachments for Brownfield and Host Port Resync cases",
				Default:             booldefault.StaticBool(false),
			},
			"cdp_enable": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Enable CDP on management interface",
				MarkdownDescription: "Enable CDP on management interface",
				Default:             booldefault.StaticBool(false),
			},
			"copp_policy": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Fabric Wide CoPP Policy. Customized CoPP policy should be provided when manual is selected",
				MarkdownDescription: "Fabric Wide CoPP Policy. Customized CoPP policy should be provided when manual is selected",
				Validators: []validator.String{
					stringvalidator.OneOf("dense", "lenient", "moderate", "strict", "manual"),
				},
				Default: stringdefault.StaticString("strict"),
			},
			"dci_subnet_range": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Address range to assign P2P Interfabric Connections",
				MarkdownDescription: "Address range to assign P2P Interfabric Connections",
				Default:             stringdefault.StaticString("10.33.0.0/16"),
			},
			"dci_subnet_target_mask": schema.Int64Attribute{
				Optional:            true,
				Computed:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
				Default:             int64default.StaticInt64(30),
			},
			"default_network": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Default Overlay Network Template For Leafs",
				MarkdownDescription: "Default Overlay Network Template For Leafs",
				Validators: []validator.String{
					stringvalidator.OneOf("Default_Network_Universal", "Service_Network_Universal"),
				},
				Default: stringdefault.StaticString("Default_Network_Universal"),
			},
			"default_pvlan_sec_network": schema.StringAttribute{
				Optional:            true,
				Description:         "Default PVLAN Secondary Network Template",
				MarkdownDescription: "Default PVLAN Secondary Network Template",
			},
			"default_queuing_policy_cloudscale": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Queuing Policy for all 92xx, -EX, -FX, -FX2, -FX3, -GX series switches in the fabric",
				MarkdownDescription: "Queuing Policy for all 92xx, -EX, -FX, -FX2, -FX3, -GX series switches in the fabric",
				Validators: []validator.String{
					stringvalidator.OneOf("queuing_policy_default_4q_cloudscale", "queuing_policy_default_8q_cloudscale"),
				},
				Default: stringdefault.StaticString("queuing_policy_default_8q_cloudscale"),
			},
			"default_queuing_policy_other": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Queuing Policy for all other switches in the fabric",
				MarkdownDescription: "Queuing Policy for all other switches in the fabric",
				Validators: []validator.String{
					stringvalidator.OneOf("queuing_policy_default_other"),
				},
				Default: stringdefault.StaticString("queuing_policy_default_other"),
			},
			"default_queuing_policy_r_series": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Queuing Policy for all R-Series switches in the fabric",
				MarkdownDescription: "Queuing Policy for all R-Series switches in the fabric",
				Validators: []validator.String{
					stringvalidator.OneOf("queuing_policy_default_r_series"),
				},
				Default: stringdefault.StaticString("queuing_policy_default_r_series"),
			},
			"default_vrf": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Default Overlay VRF Template For Leafs",
				MarkdownDescription: "Default Overlay VRF Template For Leafs",
				Default:             stringdefault.StaticString("Default_VRF_Universal"),
			},
			"default_vrf_redis_bgp_rmap": schema.StringAttribute{
				Optional:            true,
				Description:         "Route Map used to redistribute BGP routes to IGP in default vrf in auto created VRF Lite IFC links",
				MarkdownDescription: "Route Map used to redistribute BGP routes to IGP in default vrf in auto created VRF Lite IFC links",
			},
			"deploy": schema.BoolAttribute{
				Required:            true,
				Description:         "This flag does configuration save and deploy, this is only applicable in update case not valid for fabric creation.",
				MarkdownDescription: "This flag does configuration save and deploy, this is only applicable in update case not valid for fabric creation.",
			},
			"deployment_status": schema.StringAttribute{
				Computed:            true,
				Description:         "This fields shows the actual status of the deployment. It can be one of the following: Deployment pending Deployment successful",
				MarkdownDescription: "This fields shows the actual status of the deployment. It can be one of the following: Deployment pending Deployment successful",
			},
			"dhcp_enable": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Automatic IP Assignment For POAP From Local DHCP Server",
				MarkdownDescription: "Automatic IP Assignment For POAP From Local DHCP Server",
				Default:             booldefault.StaticBool(false),
			},
			"dhcp_end": schema.StringAttribute{
				Optional:            true,
				Description:         "End Address For Switch POAP",
				MarkdownDescription: "End Address For Switch POAP",
			},
			"dhcp_ipv6_enable": schema.StringAttribute{
				Optional:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
				Validators: []validator.String{
					stringvalidator.OneOf("DHCPv4", "DHCPv6"),
				},
			},
			"dhcp_start": schema.StringAttribute{
				Optional:            true,
				Description:         "Start Address For Switch POAP",
				MarkdownDescription: "Start Address For Switch POAP",
			},
			"dns_server_ip_list": schema.StringAttribute{
				Optional:            true,
				Description:         "Comma separated list of IP Addresses(v4/v6)",
				MarkdownDescription: "Comma separated list of IP Addresses(v4/v6)",
			},
			"dns_server_vrf": schema.StringAttribute{
				Optional:            true,
				Description:         "One VRF for all DNS servers or a comma separated list of VRFs, one per DNS server",
				MarkdownDescription: "One VRF for all DNS servers or a comma separated list of VRFs, one per DNS server",
			},
			"enable_aaa": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Include AAA configs from Manageability tab during device bootup",
				MarkdownDescription: "Include AAA configs from Manageability tab during device bootup",
				Default:             booldefault.StaticBool(false),
			},
			"enable_default_queuing_policy": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
				Default:             booldefault.StaticBool(false),
			},
			"enable_fabric_vpc_domain_id": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "(Not Recommended)",
				MarkdownDescription: "(Not Recommended)",
				Default:             booldefault.StaticBool(false),
			},
			"enable_macsec": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Enable MACsec in the fabric",
				MarkdownDescription: "Enable MACsec in the fabric",
				Default:             booldefault.StaticBool(false),
			},
			"enable_netflow": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Enable Netflow on VTEPs",
				MarkdownDescription: "Enable Netflow on VTEPs",
				Default:             booldefault.StaticBool(false),
			},
			"enable_ngoam": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Enable the Next Generation (NG) OAM feature for all switches in the fabric to aid in trouble-shooting VXLAN EVPN fabrics",
				MarkdownDescription: "Enable the Next Generation (NG) OAM feature for all switches in the fabric to aid in trouble-shooting VXLAN EVPN fabrics",
				Default:             booldefault.StaticBool(true),
			},
			"enable_nxapi": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Enable HTTPS NX-API",
				MarkdownDescription: "Enable HTTPS NX-API",
				Default:             booldefault.StaticBool(true),
			},
			"enable_nxapi_http": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
				Default:             booldefault.StaticBool(true),
			},
			"enable_pbr": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "When ESR option is ePBR, enable ePBR will enable pbr, sla sender and epbr features on the switch",
				MarkdownDescription: "When ESR option is ePBR, enable ePBR will enable pbr, sla sender and epbr features on the switch",
				Default:             booldefault.StaticBool(false),
			},
			"enable_pvlan": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Enable PVLAN on switches except spines and super spines",
				MarkdownDescription: "Enable PVLAN on switches except spines and super spines",
				Default:             booldefault.StaticBool(false),
			},
			"enable_realtime_backup": schema.BoolAttribute{
				Optional:            true,
				Description:         "Backup hourly only if there is any config deployment since last backup",
				MarkdownDescription: "Backup hourly only if there is any config deployment since last backup",
			},
			"enable_rt_intf_stats": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Valid for NX-OS only",
				MarkdownDescription: "Valid for NX-OS only",
				Default:             booldefault.StaticBool(false),
			},
			"enable_scheduled_backup": schema.BoolAttribute{
				Optional:            true,
				Description:         "Backup at the specified time",
				MarkdownDescription: "Backup at the specified time",
			},
			"enable_tenant_dhcp": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
				Default:             booldefault.StaticBool(true),
			},
			"enable_trm": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "For Overlay Multicast Support In VXLAN Fabrics",
				MarkdownDescription: "For Overlay Multicast Support In VXLAN Fabrics",
				Default:             booldefault.StaticBool(false),
			},
			"enable_vpc_peer_link_native_vlan": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
				Default:             booldefault.StaticBool(false),
			},
			"extra_conf_intra_links": schema.StringAttribute{
				Optional:            true,
				Description:         "Additional CLIs For All Intra-Fabric Links",
				MarkdownDescription: "Additional CLIs For All Intra-Fabric Links",
			},
			"extra_conf_leaf": schema.StringAttribute{
				Optional:            true,
				Description:         "Additional CLIs For All Leafs As Captured From Show Running Configuration",
				MarkdownDescription: "Additional CLIs For All Leafs As Captured From Show Running Configuration",
			},
			"extra_conf_spine": schema.StringAttribute{
				Optional:            true,
				Description:         "Additional CLIs For All Spines As Captured From Show Running Configuration",
				MarkdownDescription: "Additional CLIs For All Spines As Captured From Show Running Configuration",
			},
			"extra_conf_tor": schema.StringAttribute{
				Optional:            true,
				Description:         "Additional CLIs For All ToRs As Captured From Show Running Configuration",
				MarkdownDescription: "Additional CLIs For All ToRs As Captured From Show Running Configuration",
			},
			"fabric_interface_type": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Numbered(Point-to-Point) or Unnumbered",
				MarkdownDescription: "Numbered(Point-to-Point) or Unnumbered",
				Validators: []validator.String{
					stringvalidator.OneOf("p2p", "unnumbered"),
				},
				Default: stringdefault.StaticString("p2p"),
			},
			"fabric_mtu": schema.Int64Attribute{
				Optional:            true,
				Computed:            true,
				Description:         "Must be an even number",
				MarkdownDescription: "Must be an even number",
				Default:             int64default.StaticInt64(9216),
			},
			"fabric_name": schema.StringAttribute{
				Required:            true,
				Description:         "Fabric name to be created, updated or deleted",
				MarkdownDescription: "Fabric name to be created, updated or deleted",
				PlanModifiers: []planmodifier.String{
					stringplanmodifier.RequiresReplace(),
				},
			},
			"fabric_vpc_domain_id": schema.Int64Attribute{
				Optional:            true,
				Description:         "vPC Domain Id to be used on all vPC pairs",
				MarkdownDescription: "vPC Domain Id to be used on all vPC pairs",
			},
			"fabric_vpc_qos": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Qos on spines for guaranteed delivery of vPC Fabric Peering communication",
				MarkdownDescription: "Qos on spines for guaranteed delivery of vPC Fabric Peering communication",
				Default:             booldefault.StaticBool(false),
			},
			"fabric_vpc_qos_policy_name": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Qos Policy name should be same on all spines",
				MarkdownDescription: "Qos Policy name should be same on all spines",
				Default:             stringdefault.StaticString("spine_qos_for_fabric_vpc_peering"),
			},
			"feature_ptp": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
				Default:             booldefault.StaticBool(false),
			},
			"grfield_debug_flag": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Enable to clean switch configuration without reload when PreserveConfig=no",
				MarkdownDescription: "Enable to clean switch configuration without reload when PreserveConfig=no",
				Validators: []validator.String{
					stringvalidator.OneOf("Enable", "Disable"),
				},
				Default: stringdefault.StaticString("Disable"),
			},
			"hd_time": schema.Int64Attribute{
				Optional:            true,
				Computed:            true,
				Description:         "NVE Source Inteface HoldDown Time in seconds",
				MarkdownDescription: "NVE Source Inteface HoldDown Time in seconds",
				Default:             int64default.StaticInt64(180),
			},
			"host_intf_admin_state": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
				Default:             booldefault.StaticBool(true),
			},
			"ibgp_peer_template": schema.StringAttribute{
				Optional:            true,
				Description:         "Speficies the iBGP Peer-Template config used for RR and spines with border role.",
				MarkdownDescription: "Speficies the iBGP Peer-Template config used for RR and spines with border role.",
			},
			"ibgp_peer_template_leaf": schema.StringAttribute{
				Optional:            true,
				Description:         "Specifies the config used for leaf, border or border gateway. If this field is empty, the peer template defined in iBGP Peer-Template Config is used on all BGP enabled devices (RRs,leafs, border or border gateway roles.",
				MarkdownDescription: "Specifies the config used for leaf, border or border gateway. If this field is empty, the peer template defined in iBGP Peer-Template Config is used on all BGP enabled devices (RRs,leafs, border or border gateway roles.",
			},
			"id": schema.StringAttribute{
				Computed:            true,
				Description:         "Terraform unique Id for the fabric resource",
				MarkdownDescription: "Terraform unique Id for the fabric resource",
			},
			"inband_dhcp_servers": schema.StringAttribute{
				Optional:            true,
				Description:         "Comma separated list of IPv4 Addresses (Max 3)",
				MarkdownDescription: "Comma separated list of IPv4 Addresses (Max 3)",
			},
			"inband_mgmt": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Manage switches with only Inband connectivity",
				MarkdownDescription: "Manage switches with only Inband connectivity",
				Default:             booldefault.StaticBool(false),
			},
			"isis_auth_enable": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
				Default:             booldefault.StaticBool(false),
			},
			"isis_auth_key": schema.StringAttribute{
				Optional:            true,
				Description:         "Cisco Type 7 Encrypted",
				MarkdownDescription: "Cisco Type 7 Encrypted",
			},
			"isis_auth_keychain_key_id": schema.Int64Attribute{
				Optional:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
			},
			"isis_auth_keychain_name": schema.StringAttribute{
				Optional:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
			},
			"isis_level": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Supported IS types: level-1, level-2",
				MarkdownDescription: "Supported IS types: level-1, level-2",
				Validators: []validator.String{
					stringvalidator.OneOf("level-1", "level-2"),
				},
				Default: stringdefault.StaticString("level-2"),
			},
			"isis_overload_elapse_time": schema.Int64Attribute{
				Optional:            true,
				Description:         "Clear the overload bit after an elapsed time in seconds",
				MarkdownDescription: "Clear the overload bit after an elapsed time in seconds",
			},
			"isis_overload_enable": schema.BoolAttribute{
				Optional:            true,
				Description:         "When enabled, set the overload bit for an elapsed time after a reload",
				MarkdownDescription: "When enabled, set the overload bit for an elapsed time after a reload",
			},
			"isis_p2p_enable": schema.BoolAttribute{
				Optional:            true,
				Description:         "This will enable network point-to-point on fabric interfaces which are numbered",
				MarkdownDescription: "This will enable network point-to-point on fabric interfaces which are numbered",
			},
			"l2_host_intf_mtu": schema.Int64Attribute{
				Optional:            true,
				Computed:            true,
				Description:         "Must be an even number",
				MarkdownDescription: "Must be an even number",
				Default:             int64default.StaticInt64(9216),
			},
			"l2_segment_id_range": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Overlay Network Identifier Range",
				MarkdownDescription: "Overlay Network Identifier Range",
				Default:             stringdefault.StaticString("30000-49000"),
			},
			"l3_partition_id_range": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Overlay VRF Identifier Range",
				MarkdownDescription: "Overlay VRF Identifier Range",
				Default:             stringdefault.StaticString("50000-59000"),
			},
			"l3vni_mcast_group": schema.StringAttribute{
				Optional:            true,
				Description:         "Default Underlay Multicast group IP assigned for every overlay VRF.",
				MarkdownDescription: "Default Underlay Multicast group IP assigned for every overlay VRF.",
			},
			"link_state_routing": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Used for Spine-Leaf Connectivity",
				MarkdownDescription: "Used for Spine-Leaf Connectivity",
				Validators: []validator.String{
					stringvalidator.OneOf("ospf", "is-is"),
				},
				Default: stringdefault.StaticString("ospf"),
			},
			"link_state_routing_tag": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Underlay Routing Process Tag",
				MarkdownDescription: "Underlay Routing Process Tag",
				Default:             stringdefault.StaticString("UNDERLAY"),
			},
			"loopback0_ip_range": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Typically Loopback0 IP Address Range",
				MarkdownDescription: "Typically Loopback0 IP Address Range",
				Default:             stringdefault.StaticString("10.2.0.0/22"),
			},
			"loopback0_ipv6_range": schema.StringAttribute{
				Optional:            true,
				Description:         "Typically Loopback0 IPv6 Address Range",
				MarkdownDescription: "Typically Loopback0 IPv6 Address Range",
			},
			"loopback1_ip_range": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Typically Loopback1 IP Address Range",
				MarkdownDescription: "Typically Loopback1 IP Address Range",
				Default:             stringdefault.StaticString("10.3.0.0/22"),
			},
			"loopback1_ipv6_range": schema.StringAttribute{
				Optional:            true,
				Description:         "Typically Loopback1 and Anycast Loopback IPv6 Address Range",
				MarkdownDescription: "Typically Loopback1 and Anycast Loopback IPv6 Address Range",
			},
			"macsec_algorithm": schema.StringAttribute{
				Optional:            true,
				Description:         "AES_128_CMAC or AES_256_CMAC",
				MarkdownDescription: "AES_128_CMAC or AES_256_CMAC",
			},
			"macsec_cipher_suite": schema.StringAttribute{
				Optional:            true,
				Description:         "Configure Cipher Suite",
				MarkdownDescription: "Configure Cipher Suite",
			},
			"macsec_fallback_algorithm": schema.StringAttribute{
				Optional:            true,
				Description:         "AES_128_CMAC or AES_256_CMAC",
				MarkdownDescription: "AES_128_CMAC or AES_256_CMAC",
			},
			"macsec_fallback_key_string": schema.StringAttribute{
				Optional:            true,
				Description:         "Cisco Type 7 Encrypted Octet String",
				MarkdownDescription: "Cisco Type 7 Encrypted Octet String",
			},
			"macsec_key_string": schema.StringAttribute{
				Optional:            true,
				Description:         "Cisco Type 7 Encrypted Octet String",
				MarkdownDescription: "Cisco Type 7 Encrypted Octet String",
			},
			"macsec_report_timer": schema.Int64Attribute{
				Optional:            true,
				Description:         "MACsec Operational Status periodic report timer in minutes",
				MarkdownDescription: "MACsec Operational Status periodic report timer in minutes",
			},
			"mgmt_gw": schema.StringAttribute{
				Optional:            true,
				Description:         "Default Gateway For Management VRF On The Switch",
				MarkdownDescription: "Default Gateway For Management VRF On The Switch",
			},
			"mgmt_prefix": schema.Int64Attribute{
				Optional:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
			},
			"mgmt_v6prefix": schema.Int64Attribute{
				Optional:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
			},
			"mpls_handoff": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
				Default:             booldefault.StaticBool(false),
			},
			"mpls_lb_id": schema.Int64Attribute{
				Optional:            true,
				Description:         "Used for VXLAN to MPLS SR/LDP Handoff",
				MarkdownDescription: "Used for VXLAN to MPLS SR/LDP Handoff",
			},
			"mpls_loopback_ip_range": schema.StringAttribute{
				Optional:            true,
				Description:         "Used for VXLAN to MPLS SR/LDP Handoff",
				MarkdownDescription: "Used for VXLAN to MPLS SR/LDP Handoff",
			},
			"mst_instance_range": schema.StringAttribute{
				Optional:            true,
				Description:         "MST instance range, Example: 0-3,5,7-9, Default is 0",
				MarkdownDescription: "MST instance range, Example: 0-3,5,7-9, Default is 0",
			},
			"multicast_group_subnet": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Multicast pool prefix between 8 to 30. A multicast group IP from this pool is used for BUM traffic for each overlay network.",
				MarkdownDescription: "Multicast pool prefix between 8 to 30. A multicast group IP from this pool is used for BUM traffic for each overlay network.",
				Default:             stringdefault.StaticString("239.1.1.0/25"),
			},
			"netflow_exporter_list": schema.StringAttribute{
				Optional:            true,
				Description:         "One or Multiple Netflow Exporters",
				MarkdownDescription: "One or Multiple Netflow Exporters",
			},
			"netflow_monitor_list": schema.StringAttribute{
				Optional:            true,
				Description:         "One or Multiple Netflow Monitors",
				MarkdownDescription: "One or Multiple Netflow Monitors",
			},
			"netflow_record_list": schema.StringAttribute{
				Optional:            true,
				Description:         "One or Multiple Netflow Records",
				MarkdownDescription: "One or Multiple Netflow Records",
			},
			"network_extension_template": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Default Overlay Network Template For Borders",
				MarkdownDescription: "Default Overlay Network Template For Borders",
				Default:             stringdefault.StaticString("Default_Network_Extension_Universal"),
			},
			"network_vlan_range": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Per Switch Overlay Network VLAN Range",
				MarkdownDescription: "Per Switch Overlay Network VLAN Range",
				Default:             stringdefault.StaticString("2300-2999"),
			},
			"ntp_server_ip_list": schema.StringAttribute{
				Optional:            true,
				Description:         "Comma separated list of IP Addresses(v4/v6)",
				MarkdownDescription: "Comma separated list of IP Addresses(v4/v6)",
			},
			"ntp_server_vrf": schema.StringAttribute{
				Optional:            true,
				Description:         "One VRF for all NTP servers or a comma separated list of VRFs, one per NTP server",
				MarkdownDescription: "One VRF for all NTP servers or a comma separated list of VRFs, one per NTP server",
			},
			"nve_lb_id": schema.Int64Attribute{
				Optional:            true,
				Computed:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
				Default:             int64default.StaticInt64(1),
			},
			"nxapi_http_port": schema.Int64Attribute{
				Optional:            true,
				Computed:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
				Default:             int64default.StaticInt64(80),
			},
			"nxapi_https_port": schema.Int64Attribute{
				Optional:            true,
				Computed:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
				Default:             int64default.StaticInt64(443),
			},
			"object_tracking_number_range": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Per switch tracked object ID Range",
				MarkdownDescription: "Per switch tracked object ID Range",
				Default:             stringdefault.StaticString("100-299"),
			},
			"ospf_area_id": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "OSPF Area Id in IP address format",
				MarkdownDescription: "OSPF Area Id in IP address format",
				Default:             stringdefault.StaticString("0.0.0.0"),
			},
			"ospf_auth_enable": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
				Default:             booldefault.StaticBool(false),
			},
			"ospf_auth_key": schema.StringAttribute{
				Optional:            true,
				Description:         "3DES Encrypted",
				MarkdownDescription: "3DES Encrypted",
			},
			"ospf_auth_key_id": schema.Int64Attribute{
				Optional:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
			},
			"overlay_mode": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "VRF/Network configuration using config-profile or CLI",
				MarkdownDescription: "VRF/Network configuration using config-profile or CLI",
				Default:             stringdefault.StaticString("cli"),
			},
			"per_vrf_loopback_auto_provision": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Auto provision a loopback on a VTEP on VRF attachment",
				MarkdownDescription: "Auto provision a loopback on a VTEP on VRF attachment",
				Default:             booldefault.StaticBool(false),
			},
			"per_vrf_loopback_ip_range": schema.StringAttribute{
				Optional:            true,
				Description:         "Prefix pool to assign IP addresses to loopbacks on VTEPs on a per VRF basis",
				MarkdownDescription: "Prefix pool to assign IP addresses to loopbacks on VTEPs on a per VRF basis",
			},
			"phantom_rp_lb_id1": schema.Int64Attribute{
				Optional:            true,
				Description:         "Used for Bidir-PIM Phantom RP",
				MarkdownDescription: "Used for Bidir-PIM Phantom RP",
			},
			"phantom_rp_lb_id2": schema.Int64Attribute{
				Optional:            true,
				Description:         "Used for Fallback Bidir-PIM Phantom RP",
				MarkdownDescription: "Used for Fallback Bidir-PIM Phantom RP",
			},
			"phantom_rp_lb_id3": schema.Int64Attribute{
				Optional:            true,
				Description:         "Used for second Fallback Bidir-PIM Phantom RP",
				MarkdownDescription: "Used for second Fallback Bidir-PIM Phantom RP",
			},
			"phantom_rp_lb_id4": schema.Int64Attribute{
				Optional:            true,
				Description:         "Used for third Fallback Bidir-PIM Phantom RP",
				MarkdownDescription: "Used for third Fallback Bidir-PIM Phantom RP",
			},
			"pim_hello_auth_enable": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Valid for IPv4 Underlay only",
				MarkdownDescription: "Valid for IPv4 Underlay only",
				Default:             booldefault.StaticBool(false),
			},
			"pim_hello_auth_key": schema.StringAttribute{
				Optional:            true,
				Description:         "3DES Encrypted",
				MarkdownDescription: "3DES Encrypted",
			},
			"pm_enable": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
				Default:             booldefault.StaticBool(false),
			},
			"power_redundancy_mode": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Default Power Supply Mode For The Fabric",
				MarkdownDescription: "Default Power Supply Mode For The Fabric",
				Validators: []validator.String{
					stringvalidator.OneOf("ps-redundant", "combined", "insrc-redundant"),
				},
				Default: stringdefault.StaticString("ps-redundant"),
			},
			"ptp_domain_id": schema.Int64Attribute{
				Optional:            true,
				Description:         "Multiple Independent PTP Clocking Subdomains on a Single Network",
				MarkdownDescription: "Multiple Independent PTP Clocking Subdomains on a Single Network",
			},
			"ptp_lb_id": schema.Int64Attribute{
				Optional:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
			},
			"replication_mode": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Replication Mode for BUM Traffic",
				MarkdownDescription: "Replication Mode for BUM Traffic",
				Validators: []validator.String{
					stringvalidator.OneOf("Multicast", "Ingress"),
				},
				Default: stringdefault.StaticString("Multicast"),
			},
			"route_map_sequence_number_range": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
				Default:             stringdefault.StaticString("1-65534"),
			},
			"router_id_range": schema.StringAttribute{
				Optional:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
			},
			"rp_count": schema.Int64Attribute{
				Optional:            true,
				Computed:            true,
				Description:         "Number of spines acting as Rendezvous-Point (RP)",
				MarkdownDescription: "Number of spines acting as Rendezvous-Point (RP)",
				Validators: []validator.Int64{
					int64validator.OneOf(2, 4),
				},
				Default: int64default.StaticInt64(2),
			},
			"rp_lb_id": schema.Int64Attribute{
				Optional:            true,
				Computed:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
				Default:             int64default.StaticInt64(254),
			},
			"rp_mode": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Multicast RP Mode",
				MarkdownDescription: "Multicast RP Mode",
				Validators: []validator.String{
					stringvalidator.OneOf("asm", "bidir"),
				},
				Default: stringdefault.StaticString("asm"),
			},
			"rr_count": schema.Int64Attribute{
				Optional:            true,
				Computed:            true,
				Description:         "Number of spines acting as Route-Reflectors",
				MarkdownDescription: "Number of spines acting as Route-Reflectors",
				Validators: []validator.Int64{
					int64validator.OneOf(2, 4),
				},
				Default: int64default.StaticInt64(2),
			},
			"scheduled_time": schema.StringAttribute{
				Optional:            true,
				Description:         "Time (UTC) in 24hr format. (00:00 to 23:59)",
				MarkdownDescription: "Time (UTC) in 24hr format. (00:00 to 23:59)",
			},
			"seed_switch_core_interfaces": schema.StringAttribute{
				Optional:            true,
				Description:         "Core-facing Interface list on Seed Switch (e.g. e1/1-30,e1/32)",
				MarkdownDescription: "Core-facing Interface list on Seed Switch (e.g. e1/1-30,e1/32)",
			},
			"service_network_vlan_range": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Per Switch Overlay Service Network VLAN Range",
				MarkdownDescription: "Per Switch Overlay Service Network VLAN Range",
				Default:             stringdefault.StaticString("3000-3199"),
			},
			"site_id": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "For EVPN Multi-Site Support . Defaults to Fabric ASN",
				MarkdownDescription: "For EVPN Multi-Site Support . Defaults to Fabric ASN",
			},
			"sla_id_range": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Per switch SLA ID Range",
				MarkdownDescription: "Per switch SLA ID Range",
				Default:             stringdefault.StaticString("10000-19999"),
			},
			"snmp_server_host_trap": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Configure NDFC as a receiver for SNMP traps",
				MarkdownDescription: "Configure NDFC as a receiver for SNMP traps",
				Default:             booldefault.StaticBool(true),
			},
			"spine_switch_core_interfaces": schema.StringAttribute{
				Optional:            true,
				Description:         "Core-facing Interface list on all Spines (e.g. e1/1-30,e1/32)",
				MarkdownDescription: "Core-facing Interface list on all Spines (e.g. e1/1-30,e1/32)",
			},
			"static_underlay_ip_alloc": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Checking this will disable Dynamic Underlay IP Address Allocations",
				MarkdownDescription: "Checking this will disable Dynamic Underlay IP Address Allocations",
				Default:             booldefault.StaticBool(false),
			},
			"stp_bridge_priority": schema.Int64Attribute{
				Optional:            true,
				Description:         "Bridge priority for the spanning tree in increments of 4096",
				MarkdownDescription: "Bridge priority for the spanning tree in increments of 4096",
			},
			"stp_root_option": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Which protocol to use for configuring root bridge? rpvst+: Rapid Per-VLAN Spanning Tree, mst: Multiple Spanning Tree, unmanaged (default): STP Root not managed by NDFC",
				MarkdownDescription: "Which protocol to use for configuring root bridge? rpvst+: Rapid Per-VLAN Spanning Tree, mst: Multiple Spanning Tree, unmanaged (default): STP Root not managed by NDFC",
				Validators: []validator.String{
					stringvalidator.OneOf("rpvst+", "mst", "unmanaged"),
				},
				Default: stringdefault.StaticString("unmanaged"),
			},
			"stp_vlan_range": schema.StringAttribute{
				Optional:            true,
				Description:         "Vlan range, Example: 1,3-5,7,9-11, Default is 1-3967",
				MarkdownDescription: "Vlan range, Example: 1,3-5,7,9-11, Default is 1-3967",
			},
			"strict_cc_mode": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Enable bi-directional compliance checks to flag additional configs in the running config that are not in the intent/expected config",
				MarkdownDescription: "Enable bi-directional compliance checks to flag additional configs in the running config that are not in the intent/expected config",
				Default:             booldefault.StaticBool(false),
			},
			"subinterface_range": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Per Border Dot1q Range For VRF Lite Connectivity",
				MarkdownDescription: "Per Border Dot1q Range For VRF Lite Connectivity",
				Default:             stringdefault.StaticString("2-511"),
			},
			"subnet_range": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Address range to assign Numbered and Peer Link SVI IPs",
				MarkdownDescription: "Address range to assign Numbered and Peer Link SVI IPs",
				Default:             stringdefault.StaticString("10.4.0.0/16"),
			},
			"subnet_target_mask": schema.Int64Attribute{
				Optional:            true,
				Computed:            true,
				Description:         "Mask for Underlay Subnet IP Range",
				MarkdownDescription: "Mask for Underlay Subnet IP Range",
				Validators: []validator.Int64{
					int64validator.OneOf(30, 31),
				},
				Default: int64default.StaticInt64(30),
			},
			"syslog_server_ip_list": schema.StringAttribute{
				Optional:            true,
				Description:         "Comma separated list of IP Addresses(v4/v6)",
				MarkdownDescription: "Comma separated list of IP Addresses(v4/v6)",
			},
			"syslog_server_vrf": schema.StringAttribute{
				Optional:            true,
				Description:         "One VRF for all Syslog servers or a comma separated list of VRFs, one per Syslog server",
				MarkdownDescription: "One VRF for all Syslog servers or a comma separated list of VRFs, one per Syslog server",
			},
			"syslog_sev": schema.StringAttribute{
				Optional:            true,
				Description:         "Comma separated list of Syslog severity values, one per Syslog server",
				MarkdownDescription: "Comma separated list of Syslog severity values, one per Syslog server",
			},
			"tcam_allocation": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "TCAM commands are automatically generated for VxLAN and vPC Fabric Peering when Enabled",
				MarkdownDescription: "TCAM commands are automatically generated for VxLAN and vPC Fabric Peering when Enabled",
				Default:             booldefault.StaticBool(true),
			},
			"underlay_is_v6": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "If not enabled, IPv4 underlay is used",
				MarkdownDescription: "If not enabled, IPv4 underlay is used",
				Default:             booldefault.StaticBool(false),
			},
			"unnum_bootstrap_lb_id": schema.Int64Attribute{
				Optional:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
			},
			"unnum_dhcp_end": schema.StringAttribute{
				Optional:            true,
				Description:         "Must be a subset of IGP/BGP Loopback Prefix Pool",
				MarkdownDescription: "Must be a subset of IGP/BGP Loopback Prefix Pool",
			},
			"unnum_dhcp_start": schema.StringAttribute{
				Optional:            true,
				Description:         "Must be a subset of IGP/BGP Loopback Prefix Pool",
				MarkdownDescription: "Must be a subset of IGP/BGP Loopback Prefix Pool",
			},
			"use_link_local": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "If not enabled, Spine-Leaf interfaces will use global IPv6 addresses",
				MarkdownDescription: "If not enabled, Spine-Leaf interfaces will use global IPv6 addresses",
				Default:             booldefault.StaticBool(true),
			},
			"v6_subnet_range": schema.StringAttribute{
				Optional:            true,
				Description:         "IPv6 Address range to assign Numbered and Peer Link SVI IPs",
				MarkdownDescription: "IPv6 Address range to assign Numbered and Peer Link SVI IPs",
			},
			"v6_subnet_target_mask": schema.Int64Attribute{
				Optional:            true,
				Computed:            true,
				Description:         "Mask for Underlay Subnet IPv6 Range",
				MarkdownDescription: "Mask for Underlay Subnet IPv6 Range",
				Validators: []validator.Int64{
					int64validator.OneOf(126, 127),
				},
				Default: int64default.StaticInt64(126),
			},
			"vpc_auto_recovery_time": schema.Int64Attribute{
				Optional:            true,
				Computed:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
				Default:             int64default.StaticInt64(360),
			},
			"vpc_delay_restore": schema.Int64Attribute{
				Optional:            true,
				Computed:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
				Default:             int64default.StaticInt64(150),
			},
			"vpc_domain_id_range": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "vPC Domain id range to use for new pairings",
				MarkdownDescription: "vPC Domain id range to use for new pairings",
				Default:             stringdefault.StaticString("1-1000"),
			},
			"vpc_enable_ipv6_nd_sync": schema.BoolAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Enable IPv6 ND synchronization between vPC peers",
				MarkdownDescription: "Enable IPv6 ND synchronization between vPC peers",
				Default:             booldefault.StaticBool(true),
			},
			"vpc_peer_keep_alive_option": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Use vPC Peer Keep Alive with Loopback or Management",
				MarkdownDescription: "Use vPC Peer Keep Alive with Loopback or Management",
				Validators: []validator.String{
					stringvalidator.OneOf("loopback", "management"),
				},
				Default: stringdefault.StaticString("management"),
			},
			"vpc_peer_link_po": schema.Int64Attribute{
				Optional:            true,
				Computed:            true,
				Description:         "No description available",
				MarkdownDescription: "No description available",
				Default:             int64default.StaticInt64(500),
			},
			"vpc_peer_link_vlan": schema.Int64Attribute{
				Optional:            true,
				Computed:            true,
				Description:         "VLAN range for vPC Peer Link SVI",
				MarkdownDescription: "VLAN range for vPC Peer Link SVI",
				Default:             int64default.StaticInt64(3600),
			},
			"vrf_extension_template": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Default Overlay VRF Template For Borders",
				MarkdownDescription: "Default Overlay VRF Template For Borders",
				Default:             stringdefault.StaticString("Default_VRF_Extension_Universal"),
			},
			"vrf_lite_autoconfig": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "VRF Lite Inter-Fabric Connection Deployment Options. If Back2Back&ToExternal is selected, VRF Lite IFCs are auto created between border devices of two Easy Fabrics, and between border devices in Easy Fabric and edge routers in External Fabric. The IP address is taken from the VRF Lite Subnet IP Range pool.",
				MarkdownDescription: "VRF Lite Inter-Fabric Connection Deployment Options. If Back2Back&ToExternal is selected, VRF Lite IFCs are auto created between border devices of two Easy Fabrics, and between border devices in Easy Fabric and edge routers in External Fabric. The IP address is taken from the VRF Lite Subnet IP Range pool.",
				Validators: []validator.String{
					stringvalidator.OneOf("Manual", "Back2Back&ToExternal"),
				},
				Default: stringdefault.StaticString("Manual"),
			},
			"vrf_vlan_range": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Per Switch Overlay VRF VLAN Range",
				MarkdownDescription: "Per Switch Overlay VRF VLAN Range",
				Default:             stringdefault.StaticString("2000-2299"),
			},
		},
		Description:         "Resource to configure and manage a VXLAN EVPN Fabric",
		MarkdownDescription: "Resource to configure and manage a VXLAN EVPN Fabric",
	}
}

type FabricVxlanEvpnModel struct {
	AaaRemoteIpEnabled                      types.Bool   `tfsdk:"aaa_remote_ip_enabled"`
	AaaServerConf                           types.String `tfsdk:"aaa_server_conf"`
	AdvertisePipBgp                         types.Bool   `tfsdk:"advertise_pip_bgp"`
	AdvertisePipOnBorder                    types.Bool   `tfsdk:"advertise_pip_on_border"`
	AnycastBgwAdvertisePip                  types.Bool   `tfsdk:"anycast_bgw_advertise_pip"`
	AnycastGwMac                            types.String `tfsdk:"anycast_gw_mac"`
	AnycastLbId                             types.Int64  `tfsdk:"anycast_lb_id"`
	AnycastRpIpRange                        types.String `tfsdk:"anycast_rp_ip_range"`
	AutoSymmetricDefaultVrf                 types.Bool   `tfsdk:"auto_symmetric_default_vrf"`
	AutoSymmetricVrfLite                    types.Bool   `tfsdk:"auto_symmetric_vrf_lite"`
	AutoUniqueVrfLiteIpPrefix               types.Bool   `tfsdk:"auto_unique_vrf_lite_ip_prefix"`
	AutoVrfliteIfcDefaultVrf                types.Bool   `tfsdk:"auto_vrflite_ifc_default_vrf"`
	Banner                                  types.String `tfsdk:"banner"`
	BfdAuthEnable                           types.Bool   `tfsdk:"bfd_auth_enable"`
	BfdAuthKey                              types.String `tfsdk:"bfd_auth_key"`
	BfdAuthKeyId                            types.Int64  `tfsdk:"bfd_auth_key_id"`
	BfdEnable                               types.Bool   `tfsdk:"bfd_enable"`
	BfdIbgpEnable                           types.Bool   `tfsdk:"bfd_ibgp_enable"`
	BfdIsisEnable                           types.Bool   `tfsdk:"bfd_isis_enable"`
	BfdOspfEnable                           types.Bool   `tfsdk:"bfd_ospf_enable"`
	BfdPimEnable                            types.Bool   `tfsdk:"bfd_pim_enable"`
	BgpAs                                   types.String `tfsdk:"bgp_as"`
	BgpAuthEnable                           types.Bool   `tfsdk:"bgp_auth_enable"`
	BgpAuthKey                              types.String `tfsdk:"bgp_auth_key"`
	BgpAuthKeyType                          types.Int64  `tfsdk:"bgp_auth_key_type"`
	BgpLbId                                 types.Int64  `tfsdk:"bgp_lb_id"`
	BootstrapConf                           types.String `tfsdk:"bootstrap_conf"`
	BootstrapEnable                         types.Bool   `tfsdk:"bootstrap_enable"`
	BootstrapMultisubnet                    types.String `tfsdk:"bootstrap_multisubnet"`
	BrownfieldNetworkNameFormat             types.String `tfsdk:"brownfield_network_name_format"`
	BrownfieldSkipOverlayNetworkAttachments types.Bool   `tfsdk:"brownfield_skip_overlay_network_attachments"`
	CdpEnable                               types.Bool   `tfsdk:"cdp_enable"`
	CoppPolicy                              types.String `tfsdk:"copp_policy"`
	DciSubnetRange                          types.String `tfsdk:"dci_subnet_range"`
	DciSubnetTargetMask                     types.Int64  `tfsdk:"dci_subnet_target_mask"`
	DefaultNetwork                          types.String `tfsdk:"default_network"`
	DefaultPvlanSecNetwork                  types.String `tfsdk:"default_pvlan_sec_network"`
	DefaultQueuingPolicyCloudscale          types.String `tfsdk:"default_queuing_policy_cloudscale"`
	DefaultQueuingPolicyOther               types.String `tfsdk:"default_queuing_policy_other"`
	DefaultQueuingPolicyRSeries             types.String `tfsdk:"default_queuing_policy_r_series"`
	DefaultVrf                              types.String `tfsdk:"default_vrf"`
	DefaultVrfRedisBgpRmap                  types.String `tfsdk:"default_vrf_redis_bgp_rmap"`
	Deploy                                  types.Bool   `tfsdk:"deploy"`
	DeploymentStatus                        types.String `tfsdk:"deployment_status"`
	DhcpEnable                              types.Bool   `tfsdk:"dhcp_enable"`
	DhcpEnd                                 types.String `tfsdk:"dhcp_end"`
	DhcpIpv6Enable                          types.String `tfsdk:"dhcp_ipv6_enable"`
	DhcpStart                               types.String `tfsdk:"dhcp_start"`
	DnsServerIpList                         types.String `tfsdk:"dns_server_ip_list"`
	DnsServerVrf                            types.String `tfsdk:"dns_server_vrf"`
	EnableAaa                               types.Bool   `tfsdk:"enable_aaa"`
	EnableDefaultQueuingPolicy              types.Bool   `tfsdk:"enable_default_queuing_policy"`
	EnableFabricVpcDomainId                 types.Bool   `tfsdk:"enable_fabric_vpc_domain_id"`
	EnableMacsec                            types.Bool   `tfsdk:"enable_macsec"`
	EnableNetflow                           types.Bool   `tfsdk:"enable_netflow"`
	EnableNgoam                             types.Bool   `tfsdk:"enable_ngoam"`
	EnableNxapi                             types.Bool   `tfsdk:"enable_nxapi"`
	EnableNxapiHttp                         types.Bool   `tfsdk:"enable_nxapi_http"`
	EnablePbr                               types.Bool   `tfsdk:"enable_pbr"`
	EnablePvlan                             types.Bool   `tfsdk:"enable_pvlan"`
	EnableRealtimeBackup                    types.Bool   `tfsdk:"enable_realtime_backup"`
	EnableRtIntfStats                       types.Bool   `tfsdk:"enable_rt_intf_stats"`
	EnableScheduledBackup                   types.Bool   `tfsdk:"enable_scheduled_backup"`
	EnableTenantDhcp                        types.Bool   `tfsdk:"enable_tenant_dhcp"`
	EnableTrm                               types.Bool   `tfsdk:"enable_trm"`
	EnableVpcPeerLinkNativeVlan             types.Bool   `tfsdk:"enable_vpc_peer_link_native_vlan"`
	ExtraConfIntraLinks                     types.String `tfsdk:"extra_conf_intra_links"`
	ExtraConfLeaf                           types.String `tfsdk:"extra_conf_leaf"`
	ExtraConfSpine                          types.String `tfsdk:"extra_conf_spine"`
	ExtraConfTor                            types.String `tfsdk:"extra_conf_tor"`
	FabricInterfaceType                     types.String `tfsdk:"fabric_interface_type"`
	FabricMtu                               types.Int64  `tfsdk:"fabric_mtu"`
	FabricName                              types.String `tfsdk:"fabric_name"`
	FabricVpcDomainId                       types.Int64  `tfsdk:"fabric_vpc_domain_id"`
	FabricVpcQos                            types.Bool   `tfsdk:"fabric_vpc_qos"`
	FabricVpcQosPolicyName                  types.String `tfsdk:"fabric_vpc_qos_policy_name"`
	FeaturePtp                              types.Bool   `tfsdk:"feature_ptp"`
	GrfieldDebugFlag                        types.String `tfsdk:"grfield_debug_flag"`
	HdTime                                  types.Int64  `tfsdk:"hd_time"`
	HostIntfAdminState                      types.Bool   `tfsdk:"host_intf_admin_state"`
	IbgpPeerTemplate                        types.String `tfsdk:"ibgp_peer_template"`
	IbgpPeerTemplateLeaf                    types.String `tfsdk:"ibgp_peer_template_leaf"`
	Id                                      types.String `tfsdk:"id"`
	InbandDhcpServers                       types.String `tfsdk:"inband_dhcp_servers"`
	InbandMgmt                              types.Bool   `tfsdk:"inband_mgmt"`
	IsisAuthEnable                          types.Bool   `tfsdk:"isis_auth_enable"`
	IsisAuthKey                             types.String `tfsdk:"isis_auth_key"`
	IsisAuthKeychainKeyId                   types.Int64  `tfsdk:"isis_auth_keychain_key_id"`
	IsisAuthKeychainName                    types.String `tfsdk:"isis_auth_keychain_name"`
	IsisLevel                               types.String `tfsdk:"isis_level"`
	IsisOverloadElapseTime                  types.Int64  `tfsdk:"isis_overload_elapse_time"`
	IsisOverloadEnable                      types.Bool   `tfsdk:"isis_overload_enable"`
	IsisP2pEnable                           types.Bool   `tfsdk:"isis_p2p_enable"`
	L2HostIntfMtu                           types.Int64  `tfsdk:"l2_host_intf_mtu"`
	L2SegmentIdRange                        types.String `tfsdk:"l2_segment_id_range"`
	L3PartitionIdRange                      types.String `tfsdk:"l3_partition_id_range"`
	L3vniMcastGroup                         types.String `tfsdk:"l3vni_mcast_group"`
	LinkStateRouting                        types.String `tfsdk:"link_state_routing"`
	LinkStateRoutingTag                     types.String `tfsdk:"link_state_routing_tag"`
	Loopback0IpRange                        types.String `tfsdk:"loopback0_ip_range"`
	Loopback0Ipv6Range                      types.String `tfsdk:"loopback0_ipv6_range"`
	Loopback1IpRange                        types.String `tfsdk:"loopback1_ip_range"`
	Loopback1Ipv6Range                      types.String `tfsdk:"loopback1_ipv6_range"`
	MacsecAlgorithm                         types.String `tfsdk:"macsec_algorithm"`
	MacsecCipherSuite                       types.String `tfsdk:"macsec_cipher_suite"`
	MacsecFallbackAlgorithm                 types.String `tfsdk:"macsec_fallback_algorithm"`
	MacsecFallbackKeyString                 types.String `tfsdk:"macsec_fallback_key_string"`
	MacsecKeyString                         types.String `tfsdk:"macsec_key_string"`
	MacsecReportTimer                       types.Int64  `tfsdk:"macsec_report_timer"`
	MgmtGw                                  types.String `tfsdk:"mgmt_gw"`
	MgmtPrefix                              types.Int64  `tfsdk:"mgmt_prefix"`
	MgmtV6prefix                            types.Int64  `tfsdk:"mgmt_v6prefix"`
	MplsHandoff                             types.Bool   `tfsdk:"mpls_handoff"`
	MplsLbId                                types.Int64  `tfsdk:"mpls_lb_id"`
	MplsLoopbackIpRange                     types.String `tfsdk:"mpls_loopback_ip_range"`
	MstInstanceRange                        types.String `tfsdk:"mst_instance_range"`
	MulticastGroupSubnet                    types.String `tfsdk:"multicast_group_subnet"`
	NetflowExporterList                     types.String `tfsdk:"netflow_exporter_list"`
	NetflowMonitorList                      types.String `tfsdk:"netflow_monitor_list"`
	NetflowRecordList                       types.String `tfsdk:"netflow_record_list"`
	NetworkExtensionTemplate                types.String `tfsdk:"network_extension_template"`
	NetworkVlanRange                        types.String `tfsdk:"network_vlan_range"`
	NtpServerIpList                         types.String `tfsdk:"ntp_server_ip_list"`
	NtpServerVrf                            types.String `tfsdk:"ntp_server_vrf"`
	NveLbId                                 types.Int64  `tfsdk:"nve_lb_id"`
	NxapiHttpPort                           types.Int64  `tfsdk:"nxapi_http_port"`
	NxapiHttpsPort                          types.Int64  `tfsdk:"nxapi_https_port"`
	ObjectTrackingNumberRange               types.String `tfsdk:"object_tracking_number_range"`
	OspfAreaId                              types.String `tfsdk:"ospf_area_id"`
	OspfAuthEnable                          types.Bool   `tfsdk:"ospf_auth_enable"`
	OspfAuthKey                             types.String `tfsdk:"ospf_auth_key"`
	OspfAuthKeyId                           types.Int64  `tfsdk:"ospf_auth_key_id"`
	OverlayMode                             types.String `tfsdk:"overlay_mode"`
	PerVrfLoopbackAutoProvision             types.Bool   `tfsdk:"per_vrf_loopback_auto_provision"`
	PerVrfLoopbackIpRange                   types.String `tfsdk:"per_vrf_loopback_ip_range"`
	PhantomRpLbId1                          types.Int64  `tfsdk:"phantom_rp_lb_id1"`
	PhantomRpLbId2                          types.Int64  `tfsdk:"phantom_rp_lb_id2"`
	PhantomRpLbId3                          types.Int64  `tfsdk:"phantom_rp_lb_id3"`
	PhantomRpLbId4                          types.Int64  `tfsdk:"phantom_rp_lb_id4"`
	PimHelloAuthEnable                      types.Bool   `tfsdk:"pim_hello_auth_enable"`
	PimHelloAuthKey                         types.String `tfsdk:"pim_hello_auth_key"`
	PmEnable                                types.Bool   `tfsdk:"pm_enable"`
	PowerRedundancyMode                     types.String `tfsdk:"power_redundancy_mode"`
	PtpDomainId                             types.Int64  `tfsdk:"ptp_domain_id"`
	PtpLbId                                 types.Int64  `tfsdk:"ptp_lb_id"`
	ReplicationMode                         types.String `tfsdk:"replication_mode"`
	RouteMapSequenceNumberRange             types.String `tfsdk:"route_map_sequence_number_range"`
	RouterIdRange                           types.String `tfsdk:"router_id_range"`
	RpCount                                 types.Int64  `tfsdk:"rp_count"`
	RpLbId                                  types.Int64  `tfsdk:"rp_lb_id"`
	RpMode                                  types.String `tfsdk:"rp_mode"`
	RrCount                                 types.Int64  `tfsdk:"rr_count"`
	ScheduledTime                           types.String `tfsdk:"scheduled_time"`
	SeedSwitchCoreInterfaces                types.String `tfsdk:"seed_switch_core_interfaces"`
	ServiceNetworkVlanRange                 types.String `tfsdk:"service_network_vlan_range"`
	SiteId                                  types.String `tfsdk:"site_id"`
	SlaIdRange                              types.String `tfsdk:"sla_id_range"`
	SnmpServerHostTrap                      types.Bool   `tfsdk:"snmp_server_host_trap"`
	SpineSwitchCoreInterfaces               types.String `tfsdk:"spine_switch_core_interfaces"`
	StaticUnderlayIpAlloc                   types.Bool   `tfsdk:"static_underlay_ip_alloc"`
	StpBridgePriority                       types.Int64  `tfsdk:"stp_bridge_priority"`
	StpRootOption                           types.String `tfsdk:"stp_root_option"`
	StpVlanRange                            types.String `tfsdk:"stp_vlan_range"`
	StrictCcMode                            types.Bool   `tfsdk:"strict_cc_mode"`
	SubinterfaceRange                       types.String `tfsdk:"subinterface_range"`
	SubnetRange                             types.String `tfsdk:"subnet_range"`
	SubnetTargetMask                        types.Int64  `tfsdk:"subnet_target_mask"`
	SyslogServerIpList                      types.String `tfsdk:"syslog_server_ip_list"`
	SyslogServerVrf                         types.String `tfsdk:"syslog_server_vrf"`
	SyslogSev                               types.String `tfsdk:"syslog_sev"`
	TcamAllocation                          types.Bool   `tfsdk:"tcam_allocation"`
	UnderlayIsV6                            types.Bool   `tfsdk:"underlay_is_v6"`
	UnnumBootstrapLbId                      types.Int64  `tfsdk:"unnum_bootstrap_lb_id"`
	UnnumDhcpEnd                            types.String `tfsdk:"unnum_dhcp_end"`
	UnnumDhcpStart                          types.String `tfsdk:"unnum_dhcp_start"`
	UseLinkLocal                            types.Bool   `tfsdk:"use_link_local"`
	V6SubnetRange                           types.String `tfsdk:"v6_subnet_range"`
	V6SubnetTargetMask                      types.Int64  `tfsdk:"v6_subnet_target_mask"`
	VpcAutoRecoveryTime                     types.Int64  `tfsdk:"vpc_auto_recovery_time"`
	VpcDelayRestore                         types.Int64  `tfsdk:"vpc_delay_restore"`
	VpcDomainIdRange                        types.String `tfsdk:"vpc_domain_id_range"`
	VpcEnableIpv6NdSync                     types.Bool   `tfsdk:"vpc_enable_ipv6_nd_sync"`
	VpcPeerKeepAliveOption                  types.String `tfsdk:"vpc_peer_keep_alive_option"`
	VpcPeerLinkPo                           types.Int64  `tfsdk:"vpc_peer_link_po"`
	VpcPeerLinkVlan                         types.Int64  `tfsdk:"vpc_peer_link_vlan"`
	VrfExtensionTemplate                    types.String `tfsdk:"vrf_extension_template"`
	VrfLiteAutoconfig                       types.String `tfsdk:"vrf_lite_autoconfig"`
	VrfVlanRange                            types.String `tfsdk:"vrf_vlan_range"`
}
